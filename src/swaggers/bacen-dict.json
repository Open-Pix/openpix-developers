{
  "openapi": "3.0.0",
  "info": {
    "title": "DICT API",
    "version": "2.4.3",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Suporte TI BCB",
      "email": "suporte.ti@bcb.gov.br",
      "url": "https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos"
    },
    "description": "\nO Diretório de Identificadores de Contas Transacionais - DICT - é o serviço do arranjo Pix que permite\nbuscar detalhes de contas transacionais com chaves de endereçamento mais convenientes para quem faz\num pagamento. Entre os tipos de chave atualmente disponíveis estão CPF, CNPJ, telefone, e-mail e EVP.\nAs informações retornadas pelo DICT permitem ao pagador confirmar a identidade do recebedor, proporcionando\numa experiência mais fácil e segura. Permitem também ao PSP do pagador criar a mensagem de instrução de\npagamento a ser enviada para o sistema de liquidação com os detalhes de conta do recebedor.\n\nPara informações adicionais, consulte a [página do Pix](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).\n\n# Segurança\n## Autenticação\nO DICT utiliza autenticação mútua TLS.\n\nAs definições de autenticação para essa API estão especificadas no\n[manual de segurança do Pix](https://www.bcb.gov.br/content/estabilidadefinanceira/cedsfn/Manual_de_Seguranca_PIX.pdf).\n\n## Assinatura digital\nRequisições que incluam ou alterem informações no DICT devem ser assinadas com\n[XML Digital Signature](https://www.w3.org/2000/09/xmldsig) pelo participante que envia a requisição.\nRequisições de consulta não precisam ser assinadas. Respostas retornadas pelo DICT serão assinadas digitalmente.\nAs assinaturas **devem** ser validadas pelos clientes da API.\n\nA assinatura será colocada no elemento `Signature` das requisições e respostas.\nO `Signature` será [envelopado](https://www.w3.org/TR/xmldsig-core1/#def-SignatureEnveloped) pelo XML que está\nsendo assinado (assinatura é um elemento filho).\n\nPara mais detalhes sobre a forma de construir a assinatura, consulte o\n[manual de segurança do Pix](https://www.bcb.gov.br/content/estabilidadefinanceira/cedsfn/Manual_de_Seguranca_PIX.pdf).\n\n## Limitação de requisições\n\nPara preservar a estabilidade do serviço, as operações da API do DICT estão sujeitas a políticas de\nlimitação de requisições. Especificamente para a operação de consulta de vínculo, há também\nlimitação de requisições com a finalidade de prevenir ataques de varredura de dados. O algoritmo\nusado para implementar as políticas de limitação é o [token bucket](https://en.wikipedia.org/wiki/Token_bucket).\n\nUma política de limitação tem associado a ela um escopo, que pode ser o usuário final ou o participante.\nCada política possui uma taxa de reposição de \"fichas\", um tamanho de \"balde\" e uma regra de contagem.\nA tabela abaixo define as políticas aplicáveis a cada operação da API.\n\n|  Política                            | Escopo   | Operações                                                                                            | Taxa de reposição | Tamanho do balde |\n|--------------------------------------|----------|------------------------------------------------------------------------------------------------------|-------------------|------------------|\n| ENTRIES_READ_USER_ANTISCAN           | USER     | getEntry                                                                                             | (*)               |  (*)             |\n| ENTRIES_READ_USER_ANTISCAN_V2        | USER     | getEntry                                                                                             | (*)               |  (*)             |\n| ENTRIES_READ_PARTICIPANT_ANTISCAN    | PSP      | getEntry                                                                                             | (**)              |  (**)            |\n| ENTRIES_STATISTICS_READ              | PSP      | getEntryStatistics                                                                                   | (**)              |  (**)            |\n| ENTRIES_WRITE                        | PSP      | createEntry, deleteEntry                                                                             | 1200/min          |  36000           |\n| ENTRIES_UPDATE                       | PSP      | updateEntry                                                                                          | 600/min           |  600             |\n| CLAIMS_READ                          | PSP      | getClaim                                                                                             | 600/min           |  18000           |\n| CLAIMS_WRITE                         | PSP      | createClaim, acknowledgeClaim, cancelClaim, confirmClaim, completeClaim                              | 1200/min          |  36000           |\n| CLAIMS_LIST_WITH_ROLE                | PSP      | listClaims                                                                                           | 40/min            |  200             |\n| CLAIMS_LIST_WITHOUT_ROLE             | PSP      | listClaims                                                                                           | 10/min            |  50              |\n| SYNC_VERIFICATIONS_WRITE             | PSP      | createSyncVerification                                                                               | 10/min            |  50              |\n| CIDS_FILES_WRITE                     | PSP      | createCidSetFile                                                                                     | 40/dia            |  200             |\n| CIDS_FILES_READ                      | PSP      | getCidSetFile                                                                                        | 10/min            |  50              |\n| CIDS_EVENTS_LIST                     | PSP      | listCidSetEvents                                                                                     | 20/min            |  100             |\n| CIDS_ENTRIES_READ                    | PSP      | getEntryByCid                                                                                        | 1200/min          |  36000           |\n| INFRACTION_REPORTS_READ              | PSP      | getInfractionReport                                                                                  | 600/min           |  18000           |\n| INFRACTION_REPORTS_WRITE             | PSP      | createInfractionReport, acknowledgeInfractionReport, cancelInfractionReport, closeInfractionReport   | 1200/min          |  36000           |\n| INFRACTION_REPORTS_LIST_WITH_ROLE    | PSP      | listInfractionReports                                                                                | 40/min            |  200             |\n| INFRACTION_REPORTS_LIST_WITHOUT_ROLE | PSP      | listInfractionReports                                                                                | 10/min            |  50              |\n| KEYS_CHECK                           | PSP      | checkKeys                                                                                            | 70/min            |  70              |\n| REFUNDS_READ                         | PSP      | getRefund                                                                                            | 1200/min          |  36000           |\n| REFUNDS_WRITE                        | PSP      | createRefund, cancelRefund, closeRefund                                                              | 2400/min          |  72000           |\n| REFUND_LIST_WITH_ROLE                | PSP      | listRefunds                                                                                          | 40/min            |  200             |\n| REFUND_LIST_WITHOUT_ROLE             | PSP      | listRefunds                                                                                          | 10/min            |  50              |\n| FRAUD_MARKERS_READ                   | PSP      | getFraudMarker                                                                                       | 600/min           |  18000           |\n| FRAUD_MARKERS_WRITE                  | PSP      | createFraudMarker, cancelFraudMarker                                                                 | 1200/min          |  36000           |\n| FRAUD_MARKERS_LIST                   | PSP      | listPersonFraudMarkers, listEntryFraudMarkers                                                        | 1200/min          |  36000           | \n| PERSONS_STATISTICS_READ              | PSP      | getPersonStatistics                                                                                  | 12000/min         |  36000           |\n| POLICIES_READ                        | PSP      | getBucketState                                                                                       | 60/min            |  200             |\n| POLICIES_LIST                        | PSP      | listBucketStates                                                                                     | 6/min             |  20              |\n\n\n### Regras de contagem das políticas\n\n- `ENTRIES_READ_USER_ANTISCAN`\n  - Aplicável somente para chaves do tipo EMAIL e PHONE\n  - status 200: subtrai 1\n  - status 404: subtrai 20\n  - ordem de pagamento enviada\n    - adiciona 1 para categoria Pessoa Física (PF)\n    - adiciona 2 para categoria Pessoa Jurídica (PJ)\n\n- `ENTRIES_READ_USER_ANTISCAN_V2`\n  - Aplicável somente para chaves do tipo CPF, CNPJ e EVP\n  - status 200: subtrai 1\n  - status 404: subtrai 20\n  - ordem de pagamento enviada\n    - adiciona 1 para categoria Pessoa Física (PF)\n    - adiciona 2 para categoria Pessoa Jurídica (PJ)\n\n  (*) O tamanho do balde das políticas ENTRIES_READ_USER_ANTISCAN e ENTRIES_READ_USER_ANTISCAN_V2 é categorizado de acordo com o tipo de\n   usuário final realizando a consulta, Pessoa Física (PF) ou Pessoa Jurídica (PJ):\n  |  Categoria   |  Taxa de reposição | Tamanho do balde |\n  |--------------|--------------------|------------------|\n  | PF           | 2/min              | 100              |\n  | PJ           | 20/min             | 1.000            |\n\n- `ENTRIES_READ_PARTICIPANT_ANTISCAN`\n  - Aplicável para todos os tipos de chaves (EMAIL, PHONE, CPF, CNPJ e EVP)\n  - status 200: subtrai 1\n  - status 404: subtrai 3\n  - ordem de pagamento enviada: adiciona 1\n\n  (**) O tamanho do balde nesta política depende da categoria em que se enquadra do participante. As seguintes categorias são possíveis:\n  |  Categoria   | Taxa de reposição | Tamanho do balde |\n  |--------------|-------------------|------------------|\n  | A            | 25.000/min        | 50.000           |\n  | B            | 20.000/min        | 40.000           |\n  | C            | 15.000/min        | 30.000           |\n  | D            | 8.000/min         | 16.000           |\n  | E            | 2.500/min         | 5.000            |\n  | F            | 250/min           | 500              |\n  | G            | 25/min            | 250              |\n  | H            | 2/min             | 50               |\n\n- `CLAIMS_LIST_WITH_ROLE`\n  - Aplicável quando há filtragem por doador/reivindicador\n  - status diferente de 500: subtrai 1\n\n- `CLAIMS_LIST_WITHOUT_ROLE`\n  - Aplicável quando não há filtragem por doador/reivindicador\n  - status diferente de 500: subtrai 1\n\n- `REFUND_LIST_WITH_ROLE`\n  - Aplicável quando há filtragem por requisitante/contestado\n  - status diferente de 500: subtrai 1\n\n- `REFUND_LIST_WITHOUT_ROLE`\n  - Aplicável quando não há filtragem por requisitante/contestado\n  - status diferente de 500: subtrai 1\n\n- Demais políticas\n  - status diferente de 500: subtrai 1\n\n### Violação de limites\n\nCaso o limite de uma política seja excedido, o que acontece quando a quantidade de fichas chega\na zero, será retornada uma resposta de erro com status `429`.\n\n# Recomendações de desempenho\n\nÉ altamente recomendável que as conexões HTTP para a comunicação com a API sejam reutilizadas, pois o custo de\nestabelecimento de uma conexão mTLS é muito alto em termos de latência. O uso de um _pool_ de conexões HTTP\né uma alternativa efetiva para reutilização de conexões. A API retorna o header [`Keep-Alive`](https://tools.ietf.org/html/rfc2068#section-19.7.1.1)\ncom o parâmetro `timeout`. Nele é informado o tempo em segundos que o servidor esperará antes de fechar a conexão caso não ocorram\nrequisições adicionais.\n\nÉ recomendável também que se utilize compressão. Para que as respostas da API utilizem compressão, adicione nas\nrequisições o header `Accept-Encoding: gzip`. O envio de requisições com compressão não é suportado.\n\n# Evolução da API\n\nAs seguintes mudanças são esperadas e consideradas compatíveis:\n\n- Adição de novos recursos na API.\n- Adição de novos parâmetros opcionais a requisições.\n- Adição de novos campos em respostas da API.\n- Alteração da ordem de campos.\n- Adição de novos elementos em enumerações\n\n## Versionamento\n\nA versão da API é composta por 4 elementos: _major_, _minor_, _patch_ e _release candidate_.\n\nA versão que consta no _path_ da URL é o elemento _major_ da versão da API.\n\nA evolução da versão se dá seguinte forma:\n\n- *Major*: alterações incompatíveis, com quebra de contrato (v1.0.0 → v2.0.0)\n- *Minor*: alterações compatíveis, sem quebra de contrato (v1.1.0 → v1.2.0)\n- *Patch*: esclarecimentos às especificações, sem alterações funcionais (v1.1.1 → v1.1.2)\n- *Release candidate*: versões de pré-lançamento de qualquer patch futuro, minor ou major (v1.0.0-rc1 → v1.0.0-rc2)\n\nNão serão feitas mais que uma evolução _major_ em um período de 6 meses, ressalvado motivo de força maior.\nQuando houver uma evolução _major_, a versão anterior ficará disponível por no mínimo 1 mês.\n\nAlterações sem quebra de contrato e esclarecimentos às especificações podem ocorrer a qualquer momento.\nClientes devem estar preparados para lidar com essas mudanças sem quebrar.\n\n## Histórico de Mudanças\n\nOs pontos de alteração em relação a cada versão anterior estão disponíveis no [changelog](changelog.html)\n\n# Tratamento de erros\n\nO DICT retorna códigos de status HTTP para indicar sucesso ou falhas das requisições.\nCódigos 2xx indicam sucesso. Códigos 4xx indicam falhas causadas pelas informações\nenviadas pelo cliente ou pelo estado atual das entidades. Códigos 5xx indicam problemas\nno serviço no lado do DICT.\n\nAs respostas de erro incluem no corpo detalhes do erro seguindo o schema da RFC\n[Problem Details for HTTP APIs](https://tools.ietf.org/html/rfc7807).\nO campo `type` identifica o tipo de erro e no DICT segue o padrão:\n`https://dict.pi.rsfn.net.br/api/v2/error/<TipoErro>`\n\nAbaixo estão listados os tipos de erro do DICT.\n\n<style>\n  #error-definitions td:first-of-type {\n    white-space: nowrap;\n  }\n</style>\n\n<table id=\"error-definitions\">\n    <thead>\n    <tr>\n        <th>Tipo de erro</th>\n        <th>Código</th>\n        <th>Descrição</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td colspan=\"3\">\n            <em>Geral</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>Forbidden</code>\n        </td>\n        <td>403</td>\n        <td>\n            Requisição de participante autenticado viola alguma regra de autorização\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>BadRequest</code>\n        </td>\n        <td>400</td>\n        <td>\n            Requisição com formato inválido\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>NotFound</code>\n        </td>\n        <td>404</td>\n        <td>\n            Entidade não encontrada\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>Gone</code>\n        </td>\n        <td>410</td>\n        <td>\n            Recurso não está mais disponível\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RateLimited</code>\n        </td>\n        <td>429</td>\n        <td>\n            Limite de requisições foi atingido <br/>\n            Ver seção sobre <a href=\"#section/Seguranca/Limitacao-de-requisicoes\">limitação de requisições</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InternalServerError</code>\n        </td>\n        <td>500</td>\n        <td>\n            Condição inesperada ao processar requisição.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ServiceUnavailable</code>\n        </td>\n        <td>503</td>\n        <td>\n            Serviço não está disponível no momento. <br/>\n            Pode estar em manutenção ou fora da janela de funcionamento.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RequestSignatureInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Assinatura digital da requisição enviada é inválida.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RequestIdAlreadyUsed</code>\n        </td>\n        <td>400</td>\n        <td>\n            Requisição foi feita com mesmo `RequestId` de requisição <br/>\n            feita anteriormente, mas com parâmetros diferentes.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InvalidReason</code>\n        </td>\n        <td>400</td>\n        <td>\n            Requisição foi feita com uma razão inválida para a operação\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ParticipantInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            O participante não pode participar na operação solicitada. <br/>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>TaxIdNumberBlocked</code>\n        </td>\n        <td>400</td>\n        <td>\n            O CPF/CNPJ encontra-se bloqueado por ordem judicial.<br/>\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n            <em>Vínculo</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existem campos inválidos ao tentar criar ou atualizar vínculo\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryLimitExceeded</code>\n        </td>\n        <td>400</td>\n        <td>\n            Número de vínculos associados a conta transacional excedeu o limite máximo\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryAlreadyExists</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe vínculo para essa chave com o mesmo participante e dono\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryCannotBeQueriedForBookTransfer</code>\n        </td>\n        <td>400</td>\n        <td>\n            Vínculo consultado está custodiado no mesmo PSP do usuário pagador para quem está sendo feita a consulta.\n            Quando o pagador e o recebedor estão no mesmo PSP, não deve ser feita consulta ao DICT.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryKeyOwnedByDifferentPerson</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe vínculo para essa chave mas ela é possuída por outra pessoa.<br/>\n            Indica-se que seja feita uma reivindicação de posse.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryKeyInCustodyOfDifferentParticipant</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe vínculo para essa chave com o mesmo dono, mas ela encontra-se associada\n            a outro participante. Indica-se que seja feita uma reivindicação de portabilidade.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryLockedByClaim</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existe uma reivindicação com status diferente de concluída ou cancelada para a chave\n            do vínculo. Enquanto estiver nessa situação, o vínculo não pode ser excluído.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryTaxIdNumberByDifferentOwner</code>\n        </td>\n        <td>400</td>\n        <td>\n            CPF/CNPJ do vínculo diferente do CPF/CNPJ do dono da chave\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>EntryBlocked</code>\n        </td>\n        <td>400</td>\n        <td>\n            O vínculo encontra-se bloqueado por ordem judicial e não pode ser consultado\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n            <em>Reivindicação</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existem campos inválidos ao tentar criar ou atualizar reivindicação\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimTypeInconsistent</code>\n        </td>\n        <td>400</td>\n        <td>\n            Tipo de reivindicação pedida é inconsistente. Esse erro ocorre nas situações em que\n            se tenta criar a) reivindicação de <em>posse</em>, mas vínculo existente tem como dona a mesma\n            pessoa que reivindica ou b) reinvidicação de <em>portabilidade</em>, mas vínculo existente tem\n            como dona pessoa diferente da que reivindica.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimKeyNotFound</code>\n        </td>\n        <td>404</td>\n        <td>\n            Não existe vínculo registrado com a chave que está sendo reivindicada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimAlreadyExistsForKey</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existe uma reivindicação com status diferente de concluída ou cancelada para a chave reivindicada.\n            Nova reivindicação para a chave só pode ser criada se a atual foi concluída ou cancelada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimResultingEntryAlreadyExists</code>\n        </td>\n        <td>400</td>\n        <td>\n            Vínculo que resultaria ao processar reivindicação já existe, com mesma chave, participante e dono.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimOperationInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Status atual da reivindicação não permite que operação seja feita.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimResolutionPeriodNotEnded</code>\n        </td>\n        <td>400</td>\n        <td>\n            Para reivindicação de posse, PSP doador não pode <em>confirmar</em> antes do término do período resolução.\n            Para portabilidade, PSP doador não pode <em>cancelar</em> por fim de prazo antes do término do período resolução.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>ClaimCompletionPeriodNotEnded</code>\n        </td>\n        <td>400</td>\n        <td>\n            Para reivindicação de posse, se PSP reivindicador tenta encerrar antes do término do período encerramento.\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n            <em>Notificação de infração</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existem campos inválidos ao tentar criar ou atualizar a notificação de infração.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportOperationInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Status atual da notificação de infração não permite que operação seja feita.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportTransactionNotFound</code>\n        </td>\n        <td>400</td>\n        <td>\n            A transação definida na notificação de infração não foi encontrada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportTransactionNotSettled</code>\n        </td>\n        <td>400</td>\n        <td>\n            A transação definida na notificação de infração não foi liquidada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportAlreadyBeingProcessedForTransaction</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe uma notificação de infração em andamento para a transação informada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportAlreadyProcessedForTransaction</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe uma notificação de infração fechado para a transação informada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>InfractionReportPeriodExpired</code>\n        </td>\n        <td>400</td>\n        <td>\n            O prazo para a notificação de infração sobre a transação expirou.\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n            <em>Marcação de fraude</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>FraudMarkerInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existem campos inválidos ao tentar criar a marcação de fraude.\n        </td>\n    </tr>\n    <tr>\n        <td colspan=\"3\">\n            <em>Solicitação de Devolução</em>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Existem campos inválidos ao tentar criar ou atualizar a solicitação de devolução.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundOperationInvalid</code>\n        </td>\n        <td>400</td>\n        <td>\n            Status atual da solicitação de devolução não permite que operação seja feita.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundTransactionNotFound</code>\n        </td>\n        <td>400</td>\n        <td>\n            A transação definida na solicitação de devolução não foi encontrada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundTransactionNotSettled</code>\n        </td>\n        <td>400</td>\n        <td>\n            A transação definida na solicitação de devolução não foi liquidada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundAlreadyProcessedForTransaction</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe uma solicitação de devolução processada para a transação informada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundAlreadyBeingProcessedForTransaction</code>\n        </td>\n        <td>400</td>\n        <td>\n            Já existe uma solicitação de devolução em processamento para a transação informada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundPeriodExpired</code>\n        </td>\n        <td>400</td>\n        <td>\n            O prazo para solicitar devolução para a transação expirou.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>TransactionNotRefundable</code>\n        </td>\n        <td>400</td>\n        <td>\n            A transação informada na requisição não permite devolução.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>RefundInfractionReportNotFound</code>\n        </td>\n        <td>400</td>\n        <td>\n            Uma notificação de infração correspondente à transação informada não foi encontrada.\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <code>TransactionRefundable</code>\n        </td>\n        <td>400</td>\n        <td>\n          Transação informada permite devolução.<br/>\n        </td>\n    </tr>\n    </tbody>\n</table>"
  },
  "servers": [
    {
      "url": "https://dict-h.pi.rsfn.net.br:16522/api/v2/",
      "description": "Homologação"
    },
    {
      "url": "https://dict.pi.rsfn.net.br:16422/api/v2/",
      "description": "Produção"
    }
  ],
  "tags": [
    {
      "name": "Directory",
      "x-displayName": "Diretório",
      "description": "O diretório de identificadores de contas transacionais é um conjunto de vínculos.\nUm vínculo é uma associação entre uma chave de endereçamento, uma conta transacional e seu dono.\nO dono pode ser uma pessoa física ou uma pessoa jurídica. A chave de endereçamento é usada para identificar unicamente um vínculo.\n\nExemplo de vínculo:\n\n|  Chave          | Conta                                 | Dono                              |\n|-----------------|---------------------------------------|-----------------------------------|\n| +5510998765432  | Banco Fictício/Ag.7263-4/Cc.748627-1  | José João da Silva                |"
    },
    {
      "name": "Key",
      "x-displayName": "Chave",
      "description": "Uma chave é uma string que identifica um vínculo de forma única no diretório de identificadores.\nA existência de uma chave no diretório implica a existência de um vínculo.\n\nOs tipos de chave suportadas atualmente são as seguintes:\n\n<table>\n  <thead>\n    <tr>\n      <th>Tipo</th>\n      <th>Exp. regular</th>\n      <th>Exemplo</th>\n      <th>Comentário</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>CPF</td>\n      <td>^[0-9]{11}$</td>\n      <td>12345678901</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>CNPJ</td>\n      <td>^[0-9]{14}$</td>\n      <td>12345678901234</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>PHONE</td>\n      <td>^\\+[1-9]\\d{1,14}$</td>\n      <td>+5510998765432</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>EMAIL</td>\n      <td>^[a-z0-9.!#$&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$</td>\n      <td>pix@bcb.gov.br</td>\n      <td>E-mail deve possuir no máximo 77 caracteres e deve ser em minúsculo</td>\n    </tr>\n    <tr>\n      <td>EVP</td>\n      <td>^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$</td>\n      <td>123e4567-e89b-12d3-a456-426655440000</td>\n      <td>Endereço Virtual de Pagamento é um tipo de chave é gerado pelo DICT</td>\n    </tr>\n  </tbody>\n</table>\n\nNovos tipos de chave poderão vir a ser adicionados no futuro. Logo, é importante que a implementação de clientes\nseja flexível, permitindo a adição de novos tipos de chave."
    },
    {
      "name": "Claim",
      "x-displayName": "Reivindicação",
      "description": "Conforme as chaves mudem de dono ou os usuários finais criem contas transacionais em outros PSPs,\nos seguintes cenários precisarão ser tratados:\n\n1. Houve troca de posse de uma chave (telefone, por exemplo) e o novo dono deseja\ncriar um vínculo para uma conta sua mas o dono anterior já possui vínculo registrado\nno DICT com essa chave.\n2. Um usuário deseja mudar a vinculação de uma chave sua para outra conta, que\nestá domiciliada em um participante diferente do atual.\n\nPara o cenário 1, deve ser criada uma _reivindicação de posse_. Já para o cenário 2,\numa _portabilidade_. Em ambos cenários existirá a figura do PSP que irá ceder a chave (PSP Doador),\ne o PSP que irá receber a chave (PSP Reivindicador). No cenário de _reivindicação de posse_, o PSP\ndoador e o reivindicador podem ser o mesmo.\n\nNessa especificação, _reivindicação_ sem qualificador é usado como termo mais genérico para se referir\ntanto à reivindicação de posse quanto à (reivindicação de) portabilidade.\n\nOs processos de reivindicação são sempre iniciados pelo PSP reivindicador.\nUma reivindicação tem as seguintes situações:\n  - `OPEN` - Aberta pelo reivindicador, mas ainda não recebida pelo doador.\n  - `WAITING_RESOLUTION` - Já foi recebida pelo doador e está aguardando a resolução. Os critérios confirmação\n  ou cancelamento da reivindicação seguem normas específicas a depender do tipo (posse ou portabilidade).\n  - `CONFIRMED` - O doador confirmou a reivindicação. Isso implica a remoção da chave do DICT e da base interna\n  do PSP doador. Está aguardando o reivindicador encerrar o processo.\n  - `CANCELLED` - O doador ou reivindicador cancelou a reivindicação.\n  - `COMPLETED` - Tanto o DICT quanto o reivindicador atualizaram suas bases com o novo vínculo.\n\n**Diagrama de estados**\n\n```\n( OPEN )------->( WAITING_RESOLUTION )------->( CONFIRMED )------->( COMPLETED )\n    \\                      |                       /\n     \\                     |                      /\n      \\                    |                     /\n       \\                   |                    /\n        \\                  v                   /\n         v---------->( CANCELLED )<-----------v\n```\n\n**Importante!**\nOs participantes deverão monitorar as reivindicações fazendo _polling_ períodico no _endpoint_\nde [listar reivindicações](#operation/listClaims). A periodicidade adequada dependerá\ndas definições de nível de serviço. Consulte o **Manual de Tempos do Pix**."
    },
    {
      "name": "Reconciliation",
      "x-displayName": "Reconciliação",
      "description": "A reconciliação permite que o participante identifique inconsistências nos vínculos da sua base de dados interna\ne o DICT. É possível fazer a verificação de forma agregada, sobre todo o conjunto de vínculos, e a verificação de um\nvínculo individual.\n\nPara permitir que a reconciliação seja feita de forma eficiente e segura, toda operação realizada em cima de um vínculo\ngera um identificador de conteúdo, ou CID (_content identifier_). O CID é um número de 256 bits que identifica de forma\núnica o vínculo e todos os seus atributos essenciais (ver seção sobre cálculo do CID). Modifições dos dados essenciais\ndo vínculo implicam na modificação do CID associado a ele.\n\nA verificação agregada dos vínculos é feita com base no _verificador de sincronismo_ (VSync). O participante pode\naferir a igualdade do conjunto de vínculos em seu domínio gerando o VSync (ver seção sobre cálculo do VSync) da sua base\ne criando uma [verificação de sincronismo](#operation/createSyncVerification). A igualdade dos VSyncs do DICT e do\nPSP implica, com altíssima probabilidade, que o conjunto de CIDs é igual. Caso os VSyncs sejam diferentes, o conjunto\nde CIDs é necessariamente diferente, o que significa que há divergências no conjunto de dados de vínculos naquele momento.\n\nAo identificar divergências, PSP poderá [consultar pelo CID](#operation/getEntryByCid), [alterar](#operation/updateEntry),\n[remover](#operation/deleteEntry) ou [criar](#operation/createEntry) vínculos colocando no campo `Reason` das requisições\no valor `RECONCILIATION`.\n\nAs operações feitas no conjunto de vínculos sob domínio do PSP podem ser acompanhadas de forma contínua no\n[log de eventos de CIDs](#operation/listCidSetEvents).\n\nPara obter uma lista completa dos CIDs no DICT relativos a um tipo de chave, um PSP poderá solicitar a\n[criação de um arquivo de CIDs](#operation/createCidSetFile).\n\n## Cálculo de CID\n\nO CID é calculado da seguinte forma:\n\n```\nentryAttributes = keyType \"&\" key \"&\" ownerTaxIdNumber \"&\" ownerName \"&\" ownerTradeName \"&\" participant \"&\" branch \"&\" accountNumber \"&\" accountType\ncidBytes = hmacSha256(requestIdBytes, entryAttributes)\ncid = lowercase-hexadecimal(cidBytes)\n```\nObservações:\n\n- `entryAttributes` é uma string construída pela junção dos atributos essenciais do vínculo, separados por `&`.\n  Todos atributos são strings codificadas em UTF-8. Atributos nulos são codificados com string em branco, \"\".\n- `hmacSha256` é a função HMAC baseada na função de hash SHA-256.\n- `requestIdBytes` são 16 bytes aleatórios, gerados para identificar a requisição que cria o vínculo, usado como chave na função hmacSha256.\n- `cid` é a representação hexadecimal, em lowercase, do resultado da função hmacSha256.\n\nExemplo:\n\n```\nentryAttributes = 'PHONE&+5511987654321&11122233300&João Silva&&12345678&00001&0007654321&CACC'\nrequestIdBytes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\ncid = '28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88'\n```\n\n\n## Cálculo do VSync\n\n\nO VSync é resultado da aplicação de bitwise-XOR ('OU' exclusivo bit-a-bit) sobre todos os CIDs de um determinado\ntipo de chave.\n\nExemplo:\n\n```\ncids = ['28c06eb41c4dc9c3ae114831efcac7446c8747777fca8b145ecd31ff8480ae88',\n        '4d4abb9168114e349672b934d16ed201a919cb49e28b7f66a240e62c92ee007f',\n        'fce514f84f37934bc8aa0f861e4f7392273d71b9d18e8209d21e4192a7842058']\n\nvsync = xor(xor(cids[0], cids[1]), cids[2])  = '996fc1dd3b6b14bcf0c9fe8320eb66d7e2a3fd874ccf767b2e939641b1ea8eaf'\n````\n\nObservações:\n- VSync para um conjunto vazio de CIDs é definido como '0000000000000000000000000000000000000000000000000000000000000000'.\n- Há três CIDs no exemplo acima, representados em hexadecimal. A operação bitwise-XOR é feita com os CIDs em formato binário.\n- bitwise-XOR é comutativo, não importa a ordem da sua aplicação.\n- Para calcular o novo VSync resultante da adição de um CID ao conjunto, basta calcular o XOR desse CID com o VSync atual.\n  O novo VSync resultante da remoção de um CID é calculado da mesma forma."
    },
    {
      "name": "InfractionReport",
      "x-displayName": "Notificação de Infração",
      "description": "Uma notificação de infração deve ser criada quando existir fundada suspeita de fraude em uma transação liquidada no SPI.\n\nA notificação de infração pode ser criada com objetivo de solicitar ou cancelar uma devolução. Quando o \nobjetivo for solicitação de devolução (`REFUND_REQUEST`), quem deve criar a notificação é o PSP do pagador. Quando \no objetivo for cancelamento de uma devolução (`REFUND_CANCELLED`), quem deve criar é o PSP do recebedor da transação original.\n\nUma notificação de infração pode estar em um dos seguintes estados:\n  - `OPEN` - a notificação foi criada.\n  - `ACKNOWLEDGED` - a notificação foi recebida pelo PSP contraparte.\n  - `CLOSED` - a notificação foi analisada pelo PSP e o resultado está disponível.\n  - `CANCELLED` - a notificação foi cancelada pelo PSP que a criou.\n\nApós aberta (`OPEN`), a notificação de infração deve ser recebida (`ACKNOWLEDGED`) pelo PSP contraparte. Este fará \numa análise e a fechará (`CLOSED`), concordando ou discordando com a notificação de infração. \n\nO fechamento da notificação com concordância do PSP contraparte é pré-condição para que se possa [criar uma solicitação de devolução](#operation/createRefund).\nAdicionalmente, o fechamento da notificação com concordância criará uma [marcação de fraude](#operation/createFraudMarker) \nassociada ao usuário infrator e à chave. Essa marcação de fraude pode ser [cancelada](#operation/cancelFraudMarker) pelo\nPSP contraparte.\n\nA notificação de infração pode ser cancelada (`CANCELLED`) apenas pelo PSP que a abriu, a qualquer momento. \nO cancelamento da notificação de infração cancelará automaticamente a marcação de fraude associada, caso exista.\n\nNotificações de infração são criadas a partir do identificador da transação realizada no SPI (EndToEndId).\nO prazo máximo para reportar infração em uma transação está no \n[Manual Operacional do DICT](https://www.bcb.gov.br/content/estabilidadefinanceira/pix/Regulamento_Pix/X_ManualOperacionaldoDICT.pdf).\n\nCada participante deve realizar _polling_ periódico na lista de notificações para verificar se\nexistem novas notificações em que é parte. O recebimento da notificação não implica em concordância.\nOs níveis de serviço exigidos para as operações com notificações de infração estão definidos no\n[Manual de Tempos do Pix](https://www.bcb.gov.br/content/estabilidadefinanceira/pix/Regulamento_Pix/IX_ManualdeTemposdoPix.pdf).\n\n> ### 🛈 Nota\n> As notificações de infração do tipo `FRAUD` criadas na api v1 não estão mais acessíveis na api v2 nos endpoints de\n> notificação de infração. Caso essas notificações sejam acessadas na api v2, será retornado erro _Gone_ com status 410.\n> Durante o período de convivência da api v1 e v2, essas notificações deverão ser fechadas ou canceladas via api v1.\n> Na api v2, essas notificações podem ser [consultadas](#operation/getFraudMarker) ou [canceladas](#operation/cancelFraudMarker)\n> como _marcações de fraude_. Para isso, basta utilizar o id da notificação de infração."
    },
    {
      "name": "Refund",
      "x-displayName": "Solicitação de Devolução",
      "description": "A solicitação de devolução pode ser criada pelo PSP do usuário pagador nos casos em que exista fundada suspeita \nde fraude e naqueles em que se verifique falha operacional no sistema de quaisquer dos participantes \nenvolvidos na transação.\n\nUma solicitação de devolução pode ter os seguintes estados:\n  - `OPEN` - a solicitação foi criada pelo PSP do usuário pagador\n  - `CLOSED` - a solicitação foi analisada pelo PSP do usuário recebedor\n  - `CANCELLED` - a solicitação foi cancelada pelo PSP do pagador"
    },
    {
      "name": "Antifraud",
      "x-displayName": "Antifraude",
      "description": "\n## Marcação de Fraude\n\nA marcação de fraude deve ser criada pelo PSP quando há fundada suspeita de cometimento de fraude por um\nusuário seu em transações Pix liquidadas fora do SPI ou que tenham sido rejeitadas no SPI ou fora do SPI.\n\nQuando a intenção for marcar um usuário de outro PSP e recuperar os recursos liquidados no SPI, deve ser\ncriada uma [notificação de infração](#operation/createInfractionReport). \nO fechamento da notificação com concordância da contraparte gera automaticamente uma marcação de fraude.\n\nAs marcações de fraude sensibilizam contadores que compõem as informações para fins de segurança do Pix.\n\nO criador da marcação de fraude pode cancelá-la a qualquer momento após sua criação. O cancelamento da marcação \nde fraude sensibiliza os contadores associados ao usuário, diminuindo-os.\n\nTodas as marcações de fraude criadas são contabilizadas e retornadas ao [consultar estatísticas](#operation/getEntryStatistics). \n\n## Estatísticas\n\nO DICT fornece dados estatísticos que podem ser usados pelos participantes em seus processos antifraude.\n\nÉ possível consultar os dados de [chaves registradas](#operation/getEntryStatistics) e de [usuários](#operation/getPersonStatistics).     \n\nOs contadores agregados em janelas consideram três períodos:\n\n- **d90** : últimos 89 dias, incluindo o dia corrente\n- **m12** : últimos 12 meses, sem incluir o mês corrente\n- **m60** : últimos 60 meses, sem incluir o mês corrente\n\n#### Exemplo\n\nNo dia 17/11/2023 às 17:00:00Z, as janelas são definidas pelos seguintes intervalos:\n\n- **d90** : *20/08/2023 03:00:00Z* → *17/11/2023 17:00:00Z*\n- **m12** : *01/11/2022 03:00:00Z* → *01/11/2023 03:00:00Z*\n- **m60** : *01/11/2018 03:00:00Z* → *01/11/2023 03:00:00Z*\n\n> ### 🛈 Nota\n> As janelas dos contadores de liquidação possuem uma data de corte de início. Apenas eventos após a data de ativação\n> da API v2 (*05/11/2023 03:00:00Z*) são considerados."
    },
    {
      "name": "Policies",
      "x-displayName": "Política de Limitação",
      "description": "O controle do fluxo de acesso aos serviços do DICT é realizado por meio de políticas de limitação de requisições, utilizando o\nalgoritmo de [token bucket](https://en.wikipedia.org/wiki/Token_bucket). Para cada política de limitação, existe um balde com\nconfigurações específicas, de acordo com a seção [limitação de requisições](#section/Seguranca/Limitacao-de-requisicoes).\n\nÉ possível, a qualquer momento, consultar da lista de políticas de limitação e o estado dos baldes."
    }
  ],
  "paths": {
    "/entries/": {
      "post": {
        "summary": "Criar Vínculo",
        "description": "Cria um novo vínculo de chave com conta transacional.\n\n### Idempotência\nA operação de criação de vínculo é idempotente. Isso significa que é seguro realizar uma nova tentativa em caso de falhas\ntemporárias, como erros de conexão ou término abrupto de processos. A resposta retornada para uma requisição repetida é\nequivalente à resposta dada à primeira requisição processada.\n\nPara garantir a idempotência da operação, a requisição tem um campo `RequestId`. Esse campo é um\n[UUID versão 4](https://tools.ietf.org/html/rfc4122#section-4.4) e deve ser único no contexto de um mesmo participante.\nO `RequestId` fica associado ao vínculo criado e é usado no cálculo do seu CID (ver seção de reconciliação).\n\nUma requisição de criação é considerada repetida quando o CID do vínculo contido na requisição já existe no DICT.\nCaso seja feita uma requisição com um `RequestId` previamente usado, mas com parâmetros diferentes para o vínculo,\nserá retornado o erro `RequestIdAlreadyUsed`.",
        "operationId": "createEntry",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateEntryRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateEntryRequest>\n    <Signature></Signature>\n    <Entry>\n        <Key>+5561988880000</Key>\n        <KeyType>PHONE</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n    </Entry>\n    <Reason>USER_REQUESTED</Reason>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</CreateEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateEntryResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18T03:00:00.000Z</CreationDate>\n        <KeyOwnershipDate>2019-11-18T03:00:00.000Z</KeyOwnershipDate>\n    </Entry>\n</CreateEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/EntryInvalid"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/entries/{Key}": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Key"
          },
          "name": "Key",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Vínculo",
        "tags": [
          "Directory"
        ],
        "description": "Obtém um vínculo contendo os detalhes de conta transacional associados a uma chave de endereçamento.\n\n### Limitação de requisições\nA consulta a chaves está sujeita à política de limitação (_rate-limiting_) de requisições.\nA limitação funciona com base em cabeçalhos enviados na requisição. Os cabeçalhos de requisição são obrigatórios\npara todos os tipos de chaves.\n\nO parâmetro `PI-PayerId` é o identificador do usuário final e é usado para aplicar as políticas de \nlimitação com escopo de usuário. Deve ser preenchido com o CPF ou CNPJ (apenas dígitos), a depender\ndo tipo da entidade titular da conta pagadora.\n\n### Cache\nConsultas a vínculos podem ter suas respostas _cacheadas_ no PSP, devendo seguir as\ndiretivas contidas no header [`Cache-Control`](https://tools.ietf.org/html/rfc7234#section-5.2).\n\n_Importante_: Para fazer uso de cache, clientes HTTP geralmente precisam ser configurados. Não\né comum que tenham essa funcionalidade habilitada por padrão.\n\n### Estatísticas\nAtravés do parâmetro opcional `IncludeStatistics`, é possível indicar se as informações de contadores antifraude\ndevem ou não ser incluídas na resposta.",
        "operationId": "getEntry",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeStatistics",
            "in": "query",
            "required": false,
            "description": "Incluir dados antifraude na resposta."
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador único do requisitante, podendo ser:\n  - ISPB do participante (direto ou indireto) que faz a requisição **OU**\n  - 8 primeiros dígitos do CNPJ para Iniciadores de Pagamento",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^([0-9]{11}|[0-9]{14})$"
            },
            "in": "header",
            "name": "PI-PayerId",
            "description": "Identificador do pagador que originou a requisição. Usado para _rate-limiting_.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "PI-EndToEndId",
            "description": "Identificador fim-a-fim do pagamento associado a essa requisição. Corresponde ao campo `EndToEndId` na mensagem pacs.008. Usado para _rate-limiting_.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntryResponse"
                },
                "examples": {
                  "entry-include-statistics": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18T03:00:00Z</CreationDate>\n        <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate>\n        <OpenClaimCreationDate>2019-11-19T03:00:00Z</OpenClaimCreationDate>\n    </Entry>\n    <OwnerStatistics>\n        <Spi>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <Settlements d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Spi>\n        <FraudMarkers>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <ApplicationFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <MuleAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <ScammerAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <OtherFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <UnknownFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <TotalFraudTransactionAmount d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <DistinctFraudReporters d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </FraudMarkers>\n        <InfractionReports>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <OpenReports>0</OpenReports>\n            <OpenReportsDistinctReporters>0</OpenReportsDistinctReporters>\n            <RejectedReports d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </InfractionReports>\n        <Entries>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <RegisteredAccounts>0</RegisteredAccounts>\n        </Entries>\n    </OwnerStatistics>\n    <KeyStatistics>\n        <Spi>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <Settlements d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Spi>\n        <FraudMarkers>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <ApplicationFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <MuleAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <ScammerAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <OtherFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <UnknownFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <TotalFraudTransactionAmount d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <DistinctFraudReporters d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </FraudMarkers>\n        <InfractionReports>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <OpenReports>0</OpenReports>\n            <OpenReportsDistinctReporters>0</OpenReportsDistinctReporters>\n            <RejectedReports d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </InfractionReports>\n        <Entries>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <DistinctAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Entries>\n    </KeyStatistics>\n</GetEntryResponse>"
                  },
                  "entry": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18T03:00:00Z</CreationDate>\n        <KeyOwnershipDate>2019-11-18T03:00:00Z</KeyOwnershipDate>\n        <OpenClaimCreationDate>2019-11-19T03:00:00Z</OpenClaimCreationDate>\n    </Entry>\n</GetEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      },
      "put": {
        "summary": "Atualizar Vínculo",
        "tags": [
          "Directory"
        ],
        "description": "Atualiza um vínculo.\n\nA ser utilizado no cenário de atualização da informação da conta, nome e nome fantasia de um cliente, permanecendo este no mesmo PSP.\nSomente podem ser atualizadas as informações de conta do vínculo, nome e nome fantasia do cliente. Outras atualizações do vínculo\ndevem ser feitas por exclusão/inclusão do vínculo, portabilidade ou reivindicação de posse, a depender da situação.\n\n### Restrições\nAs seguintes restrições devem ser obedecidas na atualização de vínculo, de acordo com o tipo de chave:\n  - Chaves `EVP` (aleatórias) - Não é permitida a alteração.\n  - Demais chaves - É permitida a alteração com os motivos `USER_REQUESTED`, `BRANCH_TRANSFER` ou `RECONCILIATION`.",
        "operationId": "updateEntry",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEntryRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<UpdateEntryRequest>\n    <Signature></Signature>\n    <Key>+5561988887777</Key>\n    <Account>\n        <Participant>12345678</Participant>\n        <Branch>0001</Branch>\n        <AccountNumber>0007654321</AccountNumber>\n        <AccountType>CACC</AccountType>\n        <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>\n    </Account>\n    <Owner>\n        <Type>NATURAL_PERSON</Type>\n        <TaxIdNumber>11122233300</TaxIdNumber>\n        <Name>João Silva</Name>\n    </Owner>\n    <Reason>USER_REQUESTED</Reason>\n</UpdateEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<UpdateEntryResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18T03:00:00.000Z</CreationDate>\n        <KeyOwnershipDate>2019-11-18T03:00:00.000Z</KeyOwnershipDate>\n    </Entry>\n</UpdateEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/entries/{Key}/delete": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Key"
          },
          "name": "Key",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Remover Vínculo",
        "operationId": "deleteEntry",
        "description": "Remove um vínculo de chave com conta.",
        "tags": [
          "Directory"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEntryRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<DeleteEntryRequest>\n    <Signature></Signature>\n    <Key>+5561988887777</Key>\n    <Participant>12345678</Participant>\n    <Reason>ACCOUNT_CLOSURE</Reason>\n</DeleteEntryRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteEntryResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<DeleteEntryResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Key>+5561988887777</Key>\n</DeleteEntryResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/keys/check": {
      "post": {
        "summary": "Verificar existência de chaves",
        "operationId": "checkKeys",
        "description": "Consulta a existência de um conjunto de chaves no diretório de identificadores.",
        "tags": [
          "Key"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CheckKeysRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CheckKeysRequest>\n    <Keys>\n        <Key>mail@mail.com</Key>\n        <Key>mail2@mail.com</Key>\n        <Key>+5561999999999</Key>\n        <Key>+5561888888888</Key>\n        <Key>99999999999</Key>\n        <Key>99999999999999</Key>\n    </Keys>\n</CheckKeysRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CheckKeysResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CheckKeysResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Keys>\n        <Key hasEntry=\"true\">mail@mail.com</Key>\n        <Key hasEntry=\"false\">mail2@mail.com</Key>\n        <Key hasEntry=\"true\">+5561999999999</Key>\n        <Key hasEntry=\"false\">+5561888888888</Key>\n        <Key hasEntry=\"false\">99999999999</Key>\n        <Key hasEntry=\"true\">99999999999999</Key>\n    </Keys>\n</CheckKeysResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "servers": [
          {
            "url": "https://dict-np-h.pi.rsfn.net.br:16532/api-np/v2/",
            "description": "Homologação"
          },
          {
            "url": "https://dict-np.pi.rsfn.net.br:16432/api-np/v2/",
            "description": "Produção"
          }
        ]
      }
    },
    "/claims/": {
      "post": {
        "summary": "Criar Reivindicação",
        "description": "Cria uma nova reivindicação.\n\nEssa operação é feita pelo participante reivindicador a pedido do usuário final.\nO vínculo atual permanece inalterado, até que haja a confirmação pelo PSP doador.\n\nNem todo tipo de chave pode ser reivindicado ou portado. A tabela abaixo define as possibilidades:\n\n  |  compatível?  | OWNERSHIP  | PORTABILITY  |\n  |---------------|:----------:|:------------:|\n  | CPF           |            |      ✓       |\n  | CNPJ          |            |      ✓       |\n  | PHONE         |     ✓      |      ✓       |\n  | EMAIL         |            |      ✓       |\n  | EVP           |            |              |",
        "operationId": "createClaim",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateClaimRequest"
              },
              "examples": {
                "phone-claim": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateClaimRequest>\n    <Signature></Signature>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n    </Claim>\n</CreateClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>OPEN</Status>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n    </Claim>\n</CreateClaimResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ClaimInvalid"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto interessado",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Inclui adicionalmente as reivindicações de participantes indiretos",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeIndirectParticipants",
            "in": "query",
            "required": false
          },
          {
            "description": "Restringe a reivindicações em que o participante é doador",
            "schema": {
              "type": "boolean"
            },
            "name": "IsDonor",
            "in": "query",
            "required": false
          },
          {
            "description": "Restringe a reivindicações em que o participante é reivindicador",
            "schema": {
              "type": "boolean"
            },
            "name": "IsClaimer",
            "in": "query",
            "required": false
          },
          {
            "description": "Lista de ClaimStatus a serem pesquisados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimStatus"
              }
            },
            "name": "Status",
            "in": "query",
            "required": false
          },
          {
            "description": "Tipo de reivindicação",
            "schema": {
              "$ref": "#/components/schemas/ClaimType"
            },
            "name": "Type",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra reivindicações com data-hora de modificação maior ou igual a `modifiedAfter`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedAfter",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra reivindicações com data-hora de modificação menor ou igual a `modifiedBefore`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedBefore",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de reivindicações a retornar",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 200
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Reivindicações",
        "description": "Obtém uma lista de reivindicações, ordenada de forma crescente pelo campo `LastModified`, de acordo com os filtros passados.\n\nObservações:\n- Ao percorrer a lista em intervalos de tempo fechados, recomendável para que não se pule nenhum elemento, alguns elementos retornados poderão se repetir.\n- O comportamento dos filtros `isDonor` e `isClaimer`, quando os valores passados são iguais, é disjuntivo: são retornadas reinvidicações em que\no participante é doador OU reivindicador.",
        "operationId": "listClaims",
        "tags": [
          "Claim"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListClaimsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListClaimsResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <HasMoreElements>true</HasMoreElements>\n    <Claims>\n        <Claim>\n            <Type>OWNERSHIP</Type>\n            <Key>+5561988887777</Key>\n            <KeyType>PHONE</KeyType>\n            <ClaimerAccount>\n                <Participant>12345678</Participant>\n                <Branch>0001</Branch>\n                <AccountNumber>0007654321</AccountNumber>\n                <AccountType>CACC</AccountType>\n                <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n            </ClaimerAccount>\n            <Claimer>\n                <Type>NATURAL_PERSON</Type>\n                <TaxIdNumber>11122233300</TaxIdNumber>\n                <Name>João Silva</Name>\n            </Claimer>\n            <DonorParticipant>87654321</DonorParticipant>\n            <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n            <Status>CANCELLED</Status>\n            <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n            <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n            <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n            <ConfirmReason>DEFAULT_OPERATION</ConfirmReason>\n            <CancelReason>FRAUD</CancelReason>\n            <CancelledBy>DONOR</CancelledBy>\n        </Claim>\n    </Claims>\n</ListClaimsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/claims/{ClaimId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Reivindicação",
        "operationId": "getClaim",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "description": "Obtém detalhes de uma reivindicação.",
        "tags": [
          "Claim"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>OPEN</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n    </Claim>\n</GetClaimResponse>"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/claims/{ClaimId}/acknowledge": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Receber Reivindicação",
        "operationId": "acknowledgeClaim",
        "description": "Notifica recebimento pelo participante doador de reivindicação com status `OPEN`.\n\n  ### Idempotência\n  A operação é idempotente. Caso reivindicação já tenha sido recebida e ela esteja ainda com\n  status `WAITING_RESOLUTION`, será retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcknowledgeClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Participant>12345678</Participant>\n</AcknowledgeClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcknowledgeClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>WAITING_RESOLUTION</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n    </Claim>\n</AcknowledgeClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/confirm": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Confirmar Reivindicação",
        "operationId": "confirmClaim",
        "description": "Confirma a operação de reivindicação. Como consequência, vínculo da chave com participante doador é removido.\n\nStatus deve estar em `WAITING_RESOLUTION`.\n\nPara reivindicação de posse, caso razão seja `DEFAULT_OPERATION`, o prazo de resolução (`ResolutionPeriodEnd`)\n  deve ter passado. Se a razão informada for `USER_REQUESTED`, o prazo de encerramento (`CompletionPeriodEnd`)\n  será adiantado para permitir o encerramento imediato pelo reivindicador.\n\nA tabela abaixo define, a depender da razão e do tipo, quem pode confirmar.\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\">OWNERSHIP</th>\n      <th colspan=\"2\">PORTABILITY</th>\n    </tr>\n    <tr>\n      <th>Razão</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n      <th>Doador</th>\n      <th>Reivindicador</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>USER_REQUESTED</td>\n      <td>✓</td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>ACCOUNT_CLOSURE</td>\n      <td></td>\n      <td></td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>DEFAULT_OPERATION</td>\n      <td>✓</td>\n      <td></td>\n      <td></td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n  ### Idempotência\n  A operação é idempotente. Caso reivindicação já tenha sido confirmada com os mesmos parâmetros\n  e esteja ainda com status `CONFIRMED`, será retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ConfirmClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Participant>12345678</Participant>\n    <Reason>USER_REQUESTED</Reason>\n</ConfirmClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ConfirmClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>CONFIRMED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n        <ConfirmReason>USER_REQUESTED</ConfirmReason>\n    </Claim>\n</ConfirmClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancelar Reivindicação",
        "operationId": "cancelClaim",
        "description": "Cancela uma portabilidade ou reivindicação de posse.\n\n### Portabilidade\n\nStatus deve ser `OPEN` ou `WAITING_RESOLUTION`. <small>_Ver exceção abaixo_</small>\n\nSe razão de cancelamento for `DEFAULT_OPERATION`, prazo definido pelo campo `ResolutionPeriodEnd` deve ter passado.\n\nA tabela abaixo define, a depender da razão, quem pode cancelar uma portabilidade.\n\n<table>\n  <thead>\n    <tr>\n      <th>Razão</th>\n      <th style=\"text-align: center\">Doador</th>\n      <th style=\"text-align: center\">Reivindicador</th>\n    </tr>\n  </thead>\n  <tbody style=\"text-align: center\">\n    <tr>\n      <td style=\"text-align: left\">USER_REQUESTED</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">ACCOUNT_CLOSURE</td>\n      <td></td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">DEFAULT_OPERATION</td>\n      <td>✓</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">FRAUD</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n</table>\n\n_Exceção_ : Caso razão seja `FRAUD`, reivindicador poderá adicionalmente cancelar portabilidade com status `CONFIRMED`.\n\n</br>\n\n### Reivindicação de posse\n\nStatus deve ser `OPEN`, `WAITING_RESOLUTION` ou `CONFIRMED`. \n\nSe razão de cancelamento for `DEFAULT_OPERATION`, prazo de validação de posse da chave do usuário\nreivindicador deve ter passado.\n\nReivindicador é quem pode cancelar uma reivindicação de posse. <small>_Ver exceção abaixo_</small>\n\n_Exceção_ : Caso razão seja `FRAUD`, doador poderá adicionalmente cancelar reivindicação de posse.\n\n<br/>\n\n### Idempotência\n  A operação é idempotente. Caso reivindicação já tenha sido cancelada com os mesmos parâmetros,\nserá retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Participant>12345678</Participant>\n    <Reason>USER_REQUESTED</Reason>\n</CancelClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>CANCELLED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n        <CancelReason>FRAUD</CancelReason>\n        <CancelledBy>CLAIMER</CancelledBy>\n    </Claim>\n</CancelClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/claims/{ClaimId}/complete": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "ClaimId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Concluir Reivindicação",
        "operationId": "completeClaim",
        "description": "Conclui reivindicação pelo reivindicador. Como consequência, vínculo da chave com participante reivindicador é criado.\n\nPara reivindicação de posse, status deve ser `CONFIRMED` e prazo definido pelo campo `CompletionPeriodEnd`\ndeve ter passado.\n\nPara portabilidade, status deve ser `CONFIRMED`.\n\n### Idempotência\nA operação de conclusão de reivindicação é idempotente. Valem aqui as mesmas considerações feitas sobre esse tema\nna operação de [Criar Vínculo](#operation/createEntry).",
        "tags": [
          "Claim"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CompleteClaimRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CompleteClaimRequest>\n    <Signature></Signature>\n    <ClaimId>123e4567-e89b-12d3-a456-426655440000</ClaimId>\n    <Participant>12345678</Participant>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</CompleteClaimRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteClaimResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CompleteClaimResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Claim>\n        <Type>OWNERSHIP</Type>\n        <Key>+5561988887777</Key>\n        <KeyType>PHONE</KeyType>\n        <ClaimerAccount>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </ClaimerAccount>\n        <Claimer>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Claimer>\n        <DonorParticipant>87654321</DonorParticipant>\n        <Id>123e4567-e89b-12d3-a456-426655440000</Id>\n        <Status>COMPLETED</Status>\n        <ResolutionPeriodEnd>2020-01-17T10:00:00.000Z</ResolutionPeriodEnd>\n        <CompletionPeriodEnd>2020-01-17T10:00:00.000Z</CompletionPeriodEnd>\n        <LastModified>2020-01-10T10:00:00.000Z</LastModified>\n        <ConfirmReason>DEFAULT_OPERATION</ConfirmReason>\n    </Claim>\n    <EntryCreationDate>2020-01-10T10:00:00.000Z</EntryCreationDate>\n    <KeyOwnershipDate>2019-11-18T03:00:00.000Z</KeyOwnershipDate>\n</CompleteClaimResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/sync-verifications/": {
      "post": {
        "summary": "Verificar Sincronismo",
        "description": "Cria uma verificação de sincronismo para um partipante e tipo de chave.",
        "operationId": "createSyncVerification",
        "tags": [
          "Reconciliation"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateSyncVerificationRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateSyncVerificationRequest>\n    <Signature></Signature>\n    <SyncVerification>\n        <Participant>12345678</Participant>\n        <KeyType>CPF</KeyType>\n        <ParticipantSyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</ParticipantSyncVerifier>\n    </SyncVerification>\n</CreateSyncVerificationRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSyncVerificationResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateSyncVerificationResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <SyncVerification>\n        <Participant>12345678</Participant>\n        <KeyType>CPF</KeyType>\n        <ParticipantSyncVerifier>e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</ParticipantSyncVerifier>\n        <Id>1234</Id>\n        <Result>OK</Result>\n    </SyncVerification>\n</CreateSyncVerificationResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/cids/files/": {
      "post": {
        "summary": "Criar Arquivo de CIDs",
        "description": "Cria um arquivo contendo todos os CIDs de um determinado tipo de chave do participante.\nO formato do arquivo é um CID por linha ('\\n' como EOL), sem ordem definida.\n\nGeração do arquivo é feita assincronamente.",
        "operationId": "createCidSetFile",
        "tags": [
          "Reconciliation"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateCidSetFileRequest"
              },
              "examples": {
                "phone": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateCidSetFileRequest>\n    <Signature></Signature>\n    <Participant>12345678</Participant>\n    <KeyType>PHONE</KeyType>\n</CreateCidSetFileRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCidSetFileResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateCidSetFileResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <CidSetFile>\n        <Id>1234</Id>\n        <Status>REQUESTED</Status>\n        <Participant>12345678</Participant>\n        <KeyType>PHONE</KeyType>\n        <RequestTime>2020-01-10T10:00:00.000Z</RequestTime>\n    </CidSetFile>\n</CreateCidSetFileResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/cids/files/{Id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "Id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Arquivo de CIDs",
        "description": "Obtém detalhes do arquivo de CIDs requisitado",
        "operationId": "getCidSetFile",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "tags": [
          "Reconciliation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCidSetFileResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetCidSetFileResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <CidSetFile>\n        <Id>1234</Id>\n        <Status>AVAILABLE</Status>\n        <Participant>12345678</Participant>\n        <KeyType>PHONE</KeyType>\n        <RequestTime>2020-01-10T10:00:00.000Z</RequestTime>\n        <CreationTime>2020-01-10T10:00:10.000Z</CreationTime>\n        <Url>https://some_download_url/apath/12345678/dict_file_name.cids</Url>\n        <Bytes>3200000</Bytes>\n        <Sha256>f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b</Sha256>\n    </CidSetFile>\n</GetCidSetFileResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/cids/events": {
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto interessado",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Tipo de chave",
            "schema": {
              "$ref": "#/components/schemas/KeyType"
            },
            "name": "KeyType",
            "in": "query",
            "required": true
          },
          {
            "description": "Filtra eventos com data-hora maior ou igual a `StartTime`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "StartTime",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra eventos com data-hora menor ou igual a `EndTime`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "EndTime",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de eventos a retornar",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 200
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Eventos de CIDs",
        "description": "Lista os eventos de CIDs para um tipo de chave do participante, ordenados de forma crescente por `Timestamp`.\n\nA tabela abaixo resume os eventos de CIDs gerados como conseqüência de cada operação.\n\n|  Operação                                            |  Eventos de CID             |\n|------------------------------------------------------|-----------------------------|\n|  [Criar Vínculo](#operation/createEntry)             | adiciona                    |\n|  [Remover Vínculo](#operation/deleteEntry)           | remove                      |\n|  [Atualizar Vínculo](#operation/updateEntry)         | remove e adiciona           |\n|  [Confirmar Reivindicação](#operation/confirmClaim)  | remove (PSP doador)         |\n|  [Concluir Reivindicação](#operation/completeClaim)  | adiciona (PSP reivindicador)|",
        "operationId": "listCidSetEvents",
        "tags": [
          "Reconciliation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListCidSetEventsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListCidSetEventsResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <HasMoreElements>true</HasMoreElements>\n    <Participant>12345678</Participant>\n    <KeyType>CPF</KeyType>\n    <StartTime>2020-01-10T10:00:00.000Z</StartTime>\n    <EndTime>2020-01-10T11:00:00.000Z</EndTime>\n    <SyncVerifierStart>ed02457b5c41d964dbd2f2a609d63fe1bb7528dbe55e1abf5b52c249cd735797</SyncVerifierStart>\n    <SyncVerifierEnd>a592f5fb5bef95a3ec8431ebaf609e1af1e4c1b46edb0475394c5595988c748c</SyncVerifierEnd>\n    <CidSetEvents>\n        <CidSetEvent>\n            <Type>ADDED</Type>\n            <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>\n            <Timestamp>2020-01-10T10:00:00.000Z</Timestamp>\n        </CidSetEvent>\n        <CidSetEvent>\n            <Type>REMOVED</Type>\n            <Cid>961b6dd3ede3cb8ecbaacbd68de040cd78eb2ed5889130cceb4c49268ea4d506</Cid>\n            <Timestamp>2020-01-10T11:11:11.000Z</Timestamp>\n        </CidSetEvent>\n    </CidSetEvents>\n</ListCidSetEventsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/cids/entries/{Cid}": {
      "parameters": [
        {
          "name": "Cid",
          "schema": {
            "$ref": "#/components/schemas/Cid"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "PI-RequestingParticipant",
          "schema": {
            "type": "string",
            "pattern": "^[0-9]{8}$",
            "example": "12345678"
          },
          "in": "header",
          "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Vínculo por CID",
        "tags": [
          "Reconciliation"
        ],
        "description": "Obtém detalhes de um vínculo ativo identificado pelo CID",
        "operationId": "getEntryByCid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntryByCidResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryByCidResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Cid>ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb</Cid>\n    <Entry>\n        <Key>11122233300</Key>\n        <KeyType>CPF</KeyType>\n        <Account>\n            <Participant>12345678</Participant>\n            <Branch>0001</Branch>\n            <AccountNumber>0007654321</AccountNumber>\n            <AccountType>CACC</AccountType>\n            <OpeningDate>2010-01-10T03:00:00.000Z</OpeningDate>\n        </Account>\n        <Owner>\n            <Type>NATURAL_PERSON</Type>\n            <TaxIdNumber>11122233300</TaxIdNumber>\n            <Name>João Silva</Name>\n        </Owner>\n        <CreationDate>2019-11-18T03:00:00.000Z</CreationDate>\n        <KeyOwnershipDate>2019-11-18T03:00:00.000Z</KeyOwnershipDate>\n    </Entry>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</GetEntryByCidResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/infraction-reports/": {
      "post": {
        "summary": "Criar Notificação de Infração",
        "description": "Cria uma notificação de infração. \n\nQuando o objetivo da notificação de infração for solicitação de devolução, \nquem deve criar a notificação é o PSP do pagador da transação original. \nPara o cancelamento de devolução, quem deve criar é o PSP do recebedor da transação original.",
        "operationId": "createInfractionReport",
        "tags": [
          "InfractionReport"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateInfractionReportRequest"
              },
              "examples": {
                "SPI": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateInfractionReportRequest>\n    <Signature></Signature>\n    <Participant>99999010</Participant>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n    </InfractionReport>\n</CreateInfractionReportRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInfractionReportResponse"
                },
                "examples": {
                  "SPI": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateInfractionReportResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>OPEN</Status>\n        <ReporterParticipant>99999010</ReporterParticipant>\n        <CounterpartyParticipant>99999011</CounterpartyParticipant>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </InfractionReport>\n</CreateInfractionReportResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto interessado",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Inclui adicionalmente as notificações de infração de participantes indiretos",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeIndirectParticipants",
            "in": "query",
            "required": false
          },
          {
            "description": "Restringe a notificações em que o participante é o criador",
            "schema": {
              "type": "boolean"
            },
            "name": "IsReporter",
            "in": "query",
            "required": false
          },
          {
            "description": "Restringe a notificações em que o participante é contraparte",
            "schema": {
              "type": "boolean"
            },
            "name": "IsCounterparty",
            "in": "query",
            "required": false
          },
          {
            "description": "Lista de Status a serem pesquisados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InfractionReportStatus"
              }
            },
            "name": "Status",
            "in": "query",
            "required": false
          },
          {
            "description": "Inclui os detalhes da notificação (campos Details)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeDetails",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra notificações com data-hora de modificação maior ou igual a `modifiedAfter`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedAfter",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra notificações com data-hora de modificação menor ou igual a `modifiedBefore`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedBefore",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de notificações a retornar",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 200
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Notificações de Infração",
        "description": "Obtém lista de notificações de infração em que o participante é parte.\n\nLista de notificações é ordenada de forma crescente pelo campo `LastModified`.",
        "operationId": "listInfractionReport",
        "tags": [
          "InfractionReport"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListInfractionReportsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListInfractionReportsResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <HasMoreElements>true</HasMoreElements>\n    <InfractionReports>\n        <InfractionReport>\n            <TransactionId>E9999901012341234123412345678900</TransactionId>\n            <Reason>REFUND_REQUEST</Reason>\n            <SituationType>SCAM</SituationType>\n            <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n            <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n            <Status>CLOSED</Status>\n            <ReporterParticipant>99999010</ReporterParticipant>\n            <CounterpartyParticipant>99999011</CounterpartyParticipant>\n            <FraudMarkerId>91d65e98-97c0-4b0f-b577-73625da1f9fc</FraudMarkerId>\n            <AnalysisResult>AGREED</AnalysisResult>\n            <AnalysisDetails>\n                Valor bloqueado. Para mais informações, contactar central antifraude em \n                11 3000-00000, informando ID 9999.\n            </AnalysisDetails>\n            <ContactInformation>\n                <Email>abc@pix.br</Email>\n                <Phone>+5561988887777</Phone>\n            </ContactInformation>\n            <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n            <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n        </InfractionReport>\n    </InfractionReports>\n</ListInfractionReportsResponse>"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/infraction-reports/{InfractionReportId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "InfractionReportId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Notificação de Infração",
        "operationId": "getInfractionReport",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "description": "Obtém detalhes de uma notificação de infração.",
        "tags": [
          "InfractionReport"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfractionReportResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetInfractionReportResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>ACKNOWLEDGED</Status>\n        <ReporterParticipant>99999010</ReporterParticipant>\n        <CounterpartyParticipant>99999011</CounterpartyParticipant>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </InfractionReport>\n</GetInfractionReportResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/infraction-reports/{InfractionReportId}/acknowledge": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "InfractionReportId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Receber Notificação de Infração",
        "operationId": "acknowledgeInfractionReport",
        "description": "Notifica recebimento da notificação pelo participante contraparte.\n\n  ### Idempotência\n  A operação é idempotente. Caso a notificação já tenha sido recebida e esteja ainda com\n  status `ACKNOWLEDGED`, será retornada resposta equivalente à primeira requisição.",
        "tags": [
          "InfractionReport"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AcknowledgeInfractionReportRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeInfractionReportRequest>\n    <Signature></Signature>\n    <InfractionReportId>91d65e98-97c0-4b0f-b577-73625da1f9fc</InfractionReportId>\n    <Participant>12345678</Participant>\n</AcknowledgeInfractionReportRequest>\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AcknowledgeInfractionReportResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<AcknowledgeInfractionReportResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CLOSED</Status>\n        <ReporterParticipant>99999010</ReporterParticipant>\n        <CounterpartyParticipant>99999011</CounterpartyParticipant>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </InfractionReport>\n</AcknowledgeInfractionReportResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/infraction-reports/{InfractionReportId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "InfractionReportId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancelar Notificação de Infração",
        "operationId": "cancelInfractionReport",
        "description": "Cancela a notificação de infração. Só pode ser realizada pelo participante que criou a notificação.\n\nO cancelamento de uma notificação de infração fechada com concordância cancelará também a marcação de \nfraude associada.\n\n### Idempotência\nA operação é idempotente. Caso a notificação já tenha sido cancelada com os mesmos parâmetros,\nserá retornada resposta equivalente à primeira requisição.",
        "tags": [
          "InfractionReport"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelInfractionReportRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelInfractionReportRequest>\n    <Signature></Signature>\n    <InfractionReportId>91d65e98-97c0-4b0f-b577-73625da1f9fc</InfractionReportId>\n    <Participant>12345678</Participant>\n</CancelInfractionReportRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelInfractionReportResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelInfractionReportResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CANCELLED</Status>\n        <ReporterParticipant>99999010</ReporterParticipant>\n        <CounterpartyParticipant>99999011</CounterpartyParticipant>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </InfractionReport>\n</CancelInfractionReportResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/infraction-reports/{InfractionReportId}/close": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "InfractionReportId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Fechar Notificação de Infração",
        "operationId": "closeInfractionReport",
        "description": "Fecha a notificação de infração.\n\nA notificação deve ser fechada pelo participante contraparte. Para fechamento, o status deve ser `ACKNOWLEDGED`.\n\nCaso o fechamento seja com o resultado de análise `AGREED`, será gerada automaticamente uma [marcação de fraude](#operation/createFraudMarker).\nO id da marcação constará no campo `FraudMarkerId` da resposta. Nestes casos, o participante deve obrigatoriamente informar o campo <b>'FraudType'</b>. \nOs valores válidos são `APPLICATION_FRAUD`, `MULE_ACCOUNT`, `SCAMMER_ACCOUNT` e `OTHER`. \n\n<b><span style=\"font-family:'Courier New';color:red\">ATENÇÃO:</span></b> o tipo `UNKNOWN` não é válido para a API v2. Ele é usado apenas como\nvalor descritivo nas notificações de infração criadas ainda na API v1, quando o tipo de fraude não fazia parte dos dados na notificação.\n\nA marcação de fraude gerada pode ser [cancelada](#operation/cancelFraudMarker) pelo participante contraparte, responsável pelo fechamento\nda notificação de infração.\n\n### Idempotência\nA operação é idempotente. Caso a notificação já tenha sido fechado com os mesmos parâmetros,\nserá retornada resposta equivalente à primeira requisição.",
        "tags": [
          "InfractionReport"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CloseInfractionReportRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CloseInfractionReportRequest>\n    <Signature></Signature>\n    <InfractionReportId>91d65e98-97c0-4b0f-b577-73625da1f9fc</InfractionReportId>\n    <Participant>12345678</Participant>\n    <FraudType>SCAMMER_ACCOUNT</FraudType>\n    <AnalysisResult>AGREED</AnalysisResult>\n    <AnalysisDetails>\n        Valor bloqueado. Para mais informações, contactar central antifraude em \n        11 3000-00000, informando ID 9999.\n    </AnalysisDetails>\n</CloseInfractionReportRequest>\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CloseInfractionReportResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CloseInfractionReportResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <InfractionReport>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <Reason>REFUND_REQUEST</Reason>\n        <SituationType>SCAM</SituationType>\n        <ReportDetails>Transação feita através de QR Code falso em boleto</ReportDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CLOSED</Status>\n        <ReporterParticipant>99999010</ReporterParticipant>\n        <CounterpartyParticipant>99999011</CounterpartyParticipant>\n        <FraudMarkerId>91d65e98-97c0-4b0f-b577-73625da1f9fc</FraudMarkerId>\n        <ContactInformation>\n            <Email>abc@pix.br</Email>\n            <Phone>+5561988887777</Phone>\n        </ContactInformation>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n        <AnalysisResult>AGREED</AnalysisResult>\n        <AnalysisDetails>\n            Valor bloqueado. Para mais informações, contactar central antifraude em \n            11 3000-00000, informando ID 9999.\n        </AnalysisDetails>\n    </InfractionReport>\n</CloseInfractionReportResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/fraud-markers/": {
      "post": {
        "summary": "Criar Marcação de Fraude",
        "description": "Cria uma marcação de fraude.\n\n  ### Idempotência\n  A operação de criação de marcação de fraude é idempotente. Para garantir a idempotência da operação, a requisição \n  tem um campo `RequestId`, que deve ser único no contexto de um mesmo participante.",
        "operationId": "createFraudMarker",
        "tags": [
          "Antifraud"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateFraudMarkerRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateFraudMarkerRequest>\n    <Signature></Signature>\n    <Participant>99999010</Participant>\n    <FraudMarker>\n        <TaxIdNumber>01234567890</TaxIdNumber>\n        <FraudType>MULE_ACCOUNT</FraudType>\n        <Key>abc@pix.br</Key>\n    </FraudMarker>\n    <RequestId>a946d533-7f22-42a5-9a9b-e87cd55c0f4d</RequestId>\n</CreateFraudMarkerRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFraudMarkerResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateFraudMarkerResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <FraudMarker>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>REGISTERED</Status>\n        <TaxIdNumber>01234567890</TaxIdNumber>\n        <FraudType>MULE_ACCOUNT</FraudType>\n        <Key>abc@pix.br</Key>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </FraudMarker>\n</CreateFraudMarkerResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/fraud-markers/{FraudMarkerId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "FraudMarkerId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Marcação de Fraude",
        "operationId": "getFraudMarker",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "description": "Obtém detalhes de uma marcação de fraude.",
        "tags": [
          "Antifraud"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetFraudMarkerResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetFraudMarkerResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <FraudMarker>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>REGISTERED</Status>\n        <TaxIdNumber>01234567890</TaxIdNumber>\n        <FraudType>MULE_ACCOUNT</FraudType>\n        <Key>abc@pix.br</Key>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n        <InfractionReport>\n            <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n            <ReporterParticipant>99999010</ReporterParticipant>\n        </InfractionReport>\n    </FraudMarker>\n</GetFraudMarkerResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/fraud-markers/{FraudMarkerId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "FraudMarkerId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancelar Marcação de Fraude",
        "operationId": "cancelFraudMarker",
        "description": "Cancela uma marcação de fraude. \n\nPode ser realizada pelo participante que criou a marcação de fraude. \n\nUma marcação de fraude criada como consequência do [fechamento](#operation/closeInfractionReport) de uma notificação \nde infração pode ser cancelada pelo participante contraparte, que fez o fechamento da notificação.\n\n### Idempotência\nA operação é idempotente. Caso o registro já tenha sido cancelado com os mesmos parâmetros,\nserá retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Antifraud"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelFraudMarkerRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelFraudMarkerRequest>\n    <Signature></Signature>\n    <FraudMarkerId>91d65e98-97c0-4b0f-b577-73625da1f9fc</FraudMarkerId>\n    <Participant>12345678</Participant>\n</CancelFraudMarkerRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelFraudMarkerResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelFraudMarkerResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <FraudMarker>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CANCELLED</Status>\n        <TaxIdNumber>01234567890</TaxIdNumber>\n        <FraudType>MULE_ACCOUNT</FraudType>\n        <Key>abc@pix.br</Key>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2023-01-17T10:00:00.000Z</LastModified>\n        <InfractionReport>\n            <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n            <ReporterParticipant>99999010</ReporterParticipant>\n        </InfractionReport>\n    </FraudMarker>\n</CancelFraudMarkerResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/refunds/": {
      "post": {
        "summary": "Criar Solicitação de Devolução",
        "description": "Cria uma solicitação de devolução. \n\nApenas o participante debitado pode criar uma solicitação de devolução.",
        "operationId": "createRefund",
        "tags": [
          "Refund"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefundRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateRefundRequest>\n    <Signature></Signature>\n    <Participant>99999010</Participant>\n    <Refund>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <RefundReason>FRAUD</RefundReason>\n        <RefundAmount>100.00</RefundAmount>\n        <RefundDetails>Houve fraude confirmada na transação.</RefundDetails>\n    </Refund>\n</CreateRefundRequest>\n"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRefundResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CreateRefundResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Refund>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <RefundReason>FRAUD</RefundReason>\n        <RefundAmount>200.00</RefundAmount>\n        <RefundDetails>Transação feita através de QR Code falso em boleto</RefundDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>OPEN</Status>\n        <ContestedParticipant>99999010</ContestedParticipant>\n        <RequestingParticipant>99999011</RequestingParticipant>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </Refund>\n</CreateRefundResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "ISPB do partipante direto ou indireto responsável",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$"
            },
            "name": "Participant",
            "in": "query",
            "required": true
          },
          {
            "description": "Inclui adicionalmente as devoluções de participantes indiretos",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeIndirectParticipants",
            "in": "query",
            "required": false
          },
          {
            "description": "Papel do participante na devolução",
            "schema": {
              "$ref": "#/components/schemas/RefundRequestRole"
            },
            "name": "ParticipantRole",
            "in": "query",
            "required": true
          },
          {
            "description": "Lista de Status a serem pesquisados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RefundStatus"
              }
            },
            "name": "Status",
            "in": "query",
            "required": false
          },
          {
            "description": "Inclui os detalhes da devolução (campos Details)",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "name": "IncludeDetails",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra devoluções com data-hora de modificação maior ou igual a `modifiedAfter`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedAfter",
            "in": "query",
            "required": false
          },
          {
            "description": "Filtra devoluções com data-hora de modificação menor ou igual a `modifiedBefore`",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "ModifiedBefore",
            "in": "query",
            "required": false
          },
          {
            "description": "Número limite de devoluções a retornar",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 200
            },
            "name": "Limit",
            "in": "query",
            "required": false
          }
        ],
        "summary": "Listar Solicitações de Devolução",
        "description": "Obtém lista de solicitações de devolução em que o participante é parte.\n\nLista é ordenada de forma crescente pelo campo `LastModified`.",
        "operationId": "listRefund",
        "tags": [
          "Refund"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListRefundsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListRefundsResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <HasMoreElements>true</HasMoreElements>\n    <Refunds>\n        <Refund>\n            <TransactionId>E9999901012341234123412345678900</TransactionId>\n            <RefundReason>FRAUD</RefundReason>\n            <RefundAmount>200.00</RefundAmount>\n            <RefundDetails>Transação feita através de QR Code falso em boleto</RefundDetails>\n            <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n            <Status>CLOSED</Status>\n            <ContestedParticipant>99999010</ContestedParticipant>\n            <RequestingParticipant>99999011</RequestingParticipant>\n            <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n            <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n            <AnalysisResult>TOTALLY_ACCEPTED</AnalysisResult>\n            <AnalysisDetails>\n                Valor totalmente extornado.\n            </AnalysisDetails>\n            <RefundTransactionId>D9999901012341234123412345678900</RefundTransactionId>\n        </Refund>\n    </Refunds>\n</ListRefundsResponse>\n"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/refunds/{RefundId}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "RefundId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Solicitação de Devolução",
        "operationId": "getRefund",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "description": "Obtém detalhes de uma solicitação de devolução.",
        "tags": [
          "Refund"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetRefundResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetRefundResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Refund>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <RefundReason>FRAUD</RefundReason>\n        <RefundAmount>200.00</RefundAmount>\n        <RefundDetails>Transação feita através de QR Code falso em boleto</RefundDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>OPEN</Status>\n        <ContestedParticipant>99999010</ContestedParticipant>\n        <RequestingParticipant>99999011</RequestingParticipant>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </Refund>\n</GetRefundResponse>\n"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/refunds/{RefundId}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "RefundId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancelar Solicitação de Devolução",
        "operationId": "cancelRefund",
        "description": "Cancela a solicitação de devolução. \n\nSó pode ser realizada pelo participante que criou a solicitação.\n\nUma solicitação de devolução **não** pode ser cancelada após ter sido fechada.\n\n  ### Idempotência\n  A operação é idempotente. Caso a solicitação já tenha sido cancelada com os mesmos parâmetros,\n  será retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Refund"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CancelRefundRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelRefundRequest>\n    <Signature></Signature>\n    <RefundId>91d65e98-97c0-4b0f-b577-73625da1f9fc</RefundId>\n    <Participant>12345678</Participant>\n</CancelRefundRequest>"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CancelRefundResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CancelRefundResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Refund>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <RefundReason>FRAUD</RefundReason>\n        <RefundAmount>200.00</RefundAmount>\n        <RefundDetails>Transação feita através de QR Code falso em boleto</RefundDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CANCELLED</Status>\n        <ContestedParticipant>99999010</ContestedParticipant>\n        <RequestingParticipant>99999011</RequestingParticipant>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n    </Refund>\n</CancelRefundResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/refunds/{RefundId}/close": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "RefundId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Fechar Solicitação de Devolução",
        "operationId": "closeRefund",
        "description": "Fecha a solicitação de devolução. \n\nA solicitação só pode ser fechada pelo participante contestado.\n\nPara fechamento, o status deve ser `OPEN`.\n\n  ### Idempotência\n  A operação é idempotente. Caso a solicitação já tenha sido fechada com os mesmos parâmetros,\n  será retornada resposta equivalente à primeira requisição.",
        "tags": [
          "Refund"
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CloseRefundRequest"
              },
              "examples": {
                "example": {
                  "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CloseRefundRequest>\n    <Signature></Signature>\n    <RefundId>91d65e98-97c0-4b0f-b577-73625da1f9fc</RefundId>\n    <Participant>12345678</Participant>\n    <RefundAnalysisResult>TOTALLY_ACCEPTED</RefundAnalysisResult>\n    <RefundAnalysisDetails>\n        Valor totalmente extornado ao demandante.\n    </RefundAnalysisDetails>\n    <RefundTransactionId>D9999901012341234123412345678900</RefundTransactionId>\n</CloseRefundRequest>\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CloseRefundResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<CloseRefundResponse>\n    <Signature></Signature>\n    <ResponseTime>2020-01-10T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Refund>\n        <TransactionId>E9999901012341234123412345678900</TransactionId>\n        <RefundReason>FRAUD</RefundReason>\n        <RefundAmount>200.00</RefundAmount>\n        <RefundDetails>Transação feita através de QR Code falso em boleto</RefundDetails>\n        <Id>91d65e98-97c0-4b0f-b577-73625da1f9fc</Id>\n        <Status>CLOSED</Status>\n        <ContestedParticipant>99999010</ContestedParticipant>\n        <RequestingParticipant>99999011</RequestingParticipant>\n        <CreationTime>2020-01-17T10:00:00.000Z</CreationTime>\n        <LastModified>2020-01-17T10:00:00.000Z</LastModified>\n        <AnalysisResult>TOTALLY_ACCEPTED</AnalysisResult>\n        <AnalysisDetails>\n            Valor totalmente extornado ao demandante.\n        </AnalysisDetails>\n    </Refund>\n</CloseRefundResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/persons/{TaxIdNumber}/statistics": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "pattern": "^[0-9]{11,14}$",
            "example": "12345678901"
          },
          "name": "TaxIdNumber",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Estatísticas de Pessoa",
        "description": "Obtém dados estatísticos de um usuário final",
        "operationId": "getPersonStatistics",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "tags": [
          "Antifraud"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetPersonStatisticsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetPersonStatisticsResponse>\n    <Signature></Signature>\n    <ResponseTime>2023-01-01T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <TaxIdNumber>12345678901</TaxIdNumber>\n    <PersonStatistics>\n        <Spi>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <Settlements d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Spi>\n        <FraudMarkers>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <ApplicationFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <MuleAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <ScammerAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <OtherFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <UnknownFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <TotalFraudTransactionAmount d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <DistinctFraudReporters d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </FraudMarkers>\n        <InfractionReports>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <OpenReports>0</OpenReports>\n            <OpenReportsDistinctReporters>0</OpenReportsDistinctReporters>\n            <RejectedReports d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </InfractionReports>\n        <Entries>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <RegisteredAccounts>0</RegisteredAccounts>\n        </Entries>\n    </PersonStatistics>\n</GetPersonStatisticsResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/entries/{Key}/statistics": {
      "parameters": [
        {
          "schema": {
            "$ref": "#/components/schemas/Key"
          },
          "name": "Key",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Estatísticas de Chave Registrada",
        "description": "Obtém dados estatísticos relacionados a uma chave registrada",
        "operationId": "getEntryStatistics",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "tags": [
          "Antifraud"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntryStatisticsResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetEntryStatisticsResponse>\n    <Signature></Signature>\n    <ResponseTime>2023-01-01T10:00:00.000Z</ResponseTime>\n    <CorrelationId>a9f13566e19f5ca51329479a5bae60c5</CorrelationId>\n    <Key>11122233300</Key>\n    <OwnerStatistics>\n        <Spi>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <Settlements d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Spi>\n        <FraudMarkers>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <ApplicationFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <MuleAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <ScammerAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <OtherFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <UnknownFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <TotalFraudTransactionAmount d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <DistinctFraudReporters d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </FraudMarkers>\n        <InfractionReports>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <OpenReports>0</OpenReports>\n            <OpenReportsDistinctReporters>0</OpenReportsDistinctReporters>\n            <RejectedReports d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </InfractionReports>\n        <Entries>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <RegisteredAccounts>0</RegisteredAccounts>\n        </Entries>\n    </OwnerStatistics>\n    <KeyStatistics>\n        <Spi>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <Settlements d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Spi>\n        <FraudMarkers>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <ApplicationFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <MuleAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <ScammerAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <OtherFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <UnknownFrauds d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <TotalFraudTransactionAmount d90=\"0\" m12=\"0\" m60=\"0\"/>\n            <DistinctFraudReporters d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </FraudMarkers>\n        <InfractionReports>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <OpenReports>0</OpenReports>\n            <OpenReportsDistinctReporters>0</OpenReportsDistinctReporters>\n            <RejectedReports d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </InfractionReports>\n        <Entries>\n            <Watermark>2023-01-01T10:00:00.000Z</Watermark>\n            <DistinctAccounts d90=\"0\" m12=\"0\" m60=\"0\"/>\n        </Entries>\n    </KeyStatistics>\n</GetEntryStatisticsResponse>\n"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },
    "/policies/": {
      "get": {
        "summary": "Listar Políticas",
        "description": "Obtém a lista de políticas de limitação de acesso ao DICT para o participante requisitante.\n\nAlém da lista de políticas, o serviço informa também a categoria em que o participante se encontra, de acordo com\na tabela presente no item `ENTRIES_READ_PARTICIPANT_ANTISCAN` da seção [limitação de requisições](#section/Seguranca/Limitacao-de-requisicoes).\n\nCada item da lista detém informações do estado do balde correspondente no momento da consulta.",
        "operationId": "bucketStates",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "tags": [
          "Policies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListPoliciesResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<ListPoliciesResponse>\n    <Signature></Signature>\n    <CorrelationId>B20220902101925801123456781A6998</CorrelationId>\n    <ResponseTime>2022-09-02T13:19:25.833Z</ResponseTime>\n    <Category>A</Category>\n    <Policies>\n        <Policy>\n            <AvailableTokens>0</AvailableTokens>\n            <Capacity>0</Capacity>\n            <RefillTokens>0</RefillTokens>\n            <RefillPeriodSec>0</RefillPeriodSec>\n            <Name>ENTRIES_READ_PARTICIPANT_ANTISCAN</Name>\n        </Policy>\n    </Policies>\n</ListPoliciesResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "servers": [
          {
            "url": "https://dict-ratelimit-h.pi.rsfn.net.br:16522/api/v2/",
            "description": "Homologação"
          },
          {
            "url": "https://dict-ratelimit.pi.rsfn.net.br:16422/api/v2/",
            "description": "Produção"
          }
        ]
      }
    },
    "/policies/{policy}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "example": "ENTRIES_READ_PARTICIPANT_ANTISCAN"
          },
          "name": "Policy",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Consultar Política",
        "description": "Obtém o estado atual do balde do participante para a política informada.",
        "operationId": "getPolicy",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{8}$",
              "example": "12345678"
            },
            "in": "header",
            "name": "PI-RequestingParticipant",
            "description": "Identificador SPB do participante (direto ou indireto) que faz a requisição.",
            "required": true
          }
        ],
        "tags": [
          "Policies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetPolicyResponse"
                },
                "examples": {
                  "example": {
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<GetPolicyResponse>\n    <Signature></Signature>\n    <CorrelationId>B20220902102129115123456788B2B22</CorrelationId>\n    <ResponseTime>2022-09-02T13:21:29.110Z</ResponseTime>\n    <Category>A</Category>\n    <Policy>\n        <AvailableTokens>0</AvailableTokens>\n        <Capacity>0</Capacity>\n        <RefillTokens>0</RefillTokens>\n        <RefillPeriodSec>0</RefillPeriodSec>\n        <Name>ENTRIES_READ_PARTICIPANT_ANTISCAN</Name>\n    </Policy>\n</GetPolicyResponse>"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        },
        "servers": [
          {
            "url": "https://dict-ratelimit-h.pi.rsfn.net.br:16522/api/v2/",
            "description": "Homologação"
          },
          {
            "url": "https://dict-ratelimit.pi.rsfn.net.br:16422/api/v2/",
            "description": "Produção"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountType": {
        "enum": [
          "CACC",
          "TRAN",
          "SLRY",
          "SVGS"
        ],
        "description": "Tipo de conta, conforme dicionário de domínio para a mensagem pacs.008 do SPI.",
        "example": "CACC",
        "pattern": "^[A-Z]{4}$"
      },
      "BrazilianAccount": {
        "type": "object",
        "description": "Dados de conta transacional no Brasil.",
        "properties": {
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do provedor da conta"
              }
            ]
          },
          "Branch": {
            "type": "string",
            "description": "Agência, sem dígito verificador.",
            "pattern": "^[0-9]{1,4}$",
            "example": "0001"
          },
          "AccountNumber": {
            "type": "string",
            "description": "Número de conta, incluindo verificador. Se verificador for letra, substituir por 0.",
            "pattern": "^[0-9]{1,20}$",
            "example": "0007654321"
          },
          "AccountType": {
            "$ref": "#/components/schemas/AccountType"
          },
          "OpeningDate": {
            "type": "string",
            "description": "Data de abertura da conta. Para o horário, caso não seja conhecido, convenciona-se o início do dia em BRT",
            "format": "date-time"
          }
        },
        "required": [
          "Participant",
          "AccountNumber",
          "AccountType",
          "OpeningDate"
        ]
      },
      "Key": {
        "type": "string",
        "maxLength": 77,
        "example": "12345678901"
      },
      "KeyType": {
        "type": "string",
        "description": "Tipo de chave. _Novos tipos podem surgir_.",
        "enum": [
          "CPF",
          "CNPJ",
          "PHONE",
          "EMAIL",
          "EVP"
        ],
        "example": "CPF"
      },
      "ExtendedKey": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Key"
          },
          {
            "type": "string"
          },
          {
            "description": "Chave de endereçamento.",
            "xml": {
              "name": "Key"
            },
            "properties": {
              "hasEntry": {
                "type": "boolean",
                "description": "Existe vínculo cadastrado para a chave de endereçamento.",
                "xml": {
                  "attribute": true
                }
              }
            }
          }
        ]
      },
      "ISPB": {
        "type": "string",
        "pattern": "^[0-9]{8}$",
        "example": "12345678"
      },
      "KeyOwnershipDate": {
        "type": "string",
        "format": "date-time",
        "description": "Data a partir da qual o dono tem posse ininterrupta da chave de endereçamento.\nPosse da chave aqui é definida pela existência de um vínculo associando a chave ao dono,\npossivelmente com contas distintas."
      },
      "EntryCreationDate": {
        "type": "string",
        "format": "date-time",
        "description": "Data de criação do vínculo."
      },
      "Entry": {
        "type": "object",
        "description": "Vínculo entre uma chave de endereçamento, conta transacional e seu dono.",
        "properties": {
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "Account": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Owner": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "required": [
          "KeyType",
          "Account",
          "Owner"
        ]
      },
      "ExtendedEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entry"
          },
          {
            "type": "object",
            "xml": {
              "name": "Entry"
            },
            "properties": {
              "CreationDate": {
                "$ref": "#/components/schemas/EntryCreationDate"
              },
              "KeyOwnershipDate": {
                "$ref": "#/components/schemas/KeyOwnershipDate"
              },
              "OpenClaimCreationDate": {
                "type": "string",
                "format": "date-time",
                "description": "Caso a chave esteja, no momento, em processo de reivindicação de posse ou portabilidade,\neste campo informa quando o processo começou."
              }
            },
            "required": [
              "Key",
              "CreationDate",
              "KeyOwnershipDate"
            ]
          }
        ]
      },
      "EntryOperationReason": {
        "type": "string",
        "enum": [
          "USER_REQUESTED",
          "ACCOUNT_CLOSURE",
          "BRANCH_TRANSFER",
          "RECONCILIATION",
          "FRAUD",
          "RFB_VALIDATION"
        ]
      },
      "ClaimStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "WAITING_RESOLUTION",
          "CONFIRMED",
          "CANCELLED",
          "COMPLETED"
        ]
      },
      "ClaimType": {
        "type": "string",
        "enum": [
          "OWNERSHIP",
          "PORTABILITY"
        ],
        "description": "Tipo de reivindicação"
      },
      "ClaimOperationReason": {
        "type": "string",
        "enum": [
          "USER_REQUESTED",
          "ACCOUNT_CLOSURE",
          "FRAUD",
          "DEFAULT_OPERATION",
          "RECONCILIATION"
        ],
        "description": "Razão da operação"
      },
      "RefundRequestRole": {
        "type": "string",
        "enum": [
          "REQUESTING",
          "CONTESTED"
        ],
        "description": "Papel do participante na operação de requisição de devolução"
      },
      "Claim": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/ClaimType"
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "KeyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeyType"
              },
              {
                "description": "Tipo de chave. CPF e CNPJ são inválidos, não podem ter posse reivindicada."
              }
            ]
          },
          "ClaimerAccount": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Claimer": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "required": [
          "Key",
          "KeyType",
          "ClaimerAccount",
          "Claimer",
          "Type"
        ]
      },
      "ExtendedClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Claim"
          },
          {
            "type": "object",
            "xml": {
              "name": "Claim"
            },
            "properties": {
              "DonorParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante que doa a chave reinvidicada"
                  }
                ]
              },
              "Id": {
                "type": "string",
                "format": "uuid"
              },
              "Status": {
                "$ref": "#/components/schemas/ClaimStatus"
              },
              "ResolutionPeriodEnd": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora quando termina o período de resolução."
              },
              "CompletionPeriodEnd": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora quando termina o período de encerramento. Apenas para reivindicação de posse."
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da última modificação do status da reivindicação"
              },
              "ConfirmReason": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ClaimOperationReason"
                  },
                  {
                    "description": "Razão utilizada pelo doador para confirmar a operação (caso já tenha sido confirmada)"
                  }
                ]
              },
              "CancelReason": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ClaimOperationReason"
                  },
                  {
                    "description": "Razão utilizada pelo participante que cancelou a operação (caso já tenha sido cancelada)"
                  }
                ]
              },
              "CancelledBy": {
                "type": "string",
                "description": "Participante que realizou o cancelamento (caso tenha sido cancelada)",
                "enum": [
                  "DONOR",
                  "CLAIMER"
                ]
              }
            },
            "required": [
              "DonorParticipant",
              "Id",
              "Status",
              "ResolutionPeriodEnd",
              "LastModified"
            ]
          }
        ]
      },
      "Cid": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{64}$",
        "description": "Identificador de conteúdo"
      },
      "CidSetEventType": {
        "type": "string",
        "enum": [
          "ADDED",
          "REMOVED"
        ]
      },
      "CidSetEvent": {
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/components/schemas/CidSetEventType"
          },
          "Cid": {
            "$ref": "#/components/schemas/Cid"
          },
          "Timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do evento"
          }
        }
      },
      "CorrelationId": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{32}$",
        "description": "Identificador de correlação para suporte operacional"
      },
      "RequestId": {
        "type": "string",
        "format": "uuid",
        "description": "Chave de idempotência da requisição. UUID versão 4."
      },
      "SyncVerificationResult": {
        "type": "string",
        "enum": [
          "OK",
          "NOK"
        ]
      },
      "SyncVerifier": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{64}$",
        "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
      },
      "SyncVerification": {
        "type": "object",
        "properties": {
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "ParticipantSyncVerifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo calculado pelo participante"
              }
            ]
          }
        },
        "required": [
          "Participant",
          "KeyType",
          "ParticipantSyncVerifier"
        ]
      },
      "ExtendedSyncVerification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SyncVerification"
          },
          {
            "type": "object",
            "xml": {
              "name": "SyncVerification"
            },
            "properties": {
              "Id": {
                "type": "integer"
              },
              "Result": {
                "$ref": "#/components/schemas/SyncVerificationResult"
              }
            },
            "required": [
              "Id",
              "Result"
            ]
          }
        ]
      },
      "FileStatus": {
        "type": "string",
        "description": "Status de geração do arquivo.",
        "enum": [
          "REQUESTED",
          "PROCESSING",
          "AVAILABLE",
          "UNAVAILABLE",
          "ERROR"
        ],
        "example": "AVAILABLE"
      },
      "CidSetFile": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileStatus"
              },
              {
                "description": "Status de geração do arquivo de CIDs"
              }
            ]
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "RequestTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora de solicitação da geração do arquivo."
          },
          "CreationTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora em que o arquivo foi gerado. Presente quando status for `AVAILABLE`."
          },
          "Url": {
            "type": "string",
            "description": "URL para download do arquivo. Presente quando status for `AVAILABLE`.",
            "maxLength": 500,
            "example": "https://alguma_url.algum_dominio/algum_path/nome_do_arquivo_gerado_pelo_dict.tipo"
          },
          "Bytes": {
            "type": "integer",
            "description": "Tamanho do arquivo. Presente quando status for `AVAILABLE`."
          },
          "Sha256": {
            "type": "string",
            "description": "SHA256 do conteúdo do arquivo. Presente quando status for `AVAILABLE`.",
            "pattern": "^[0-9a-fA-F]{64}$",
            "example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
          }
        },
        "required": [
          "Id",
          "Status",
          "Participant",
          "KeyType",
          "RequestTime"
        ]
      },
      "WindowedValue": {
        "type": "object",
        "properties": {
          "d90": {
            "description": "Valor para os últimos 90 dias",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "m12": {
            "description": "Valor para os últimos 12 meses",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "m60": {
            "description": "Valor para os últimos 60 meses",
            "type": "integer",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PersonStatistics": {
        "type": "object",
        "description": "Estatísticas associadas a pessoa física ou pessoa jurídica",
        "properties": {
          "Spi": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "Settlements": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de liquidações como recebedor no SPI"
                  }
                ]
              }
            }
          },
          "FraudMarkers": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "ApplicationFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo APPLICATION_FRAUD"
                  }
                ]
              },
              "MuleAccounts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo MULE_ACCOUNT"
                  }
                ]
              },
              "ScammerAccounts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo SCAMMER_ACCOUNT"
                  }
                ]
              },
              "OtherFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo OTHER"
                  }
                ]
              },
              "UnknownFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude sem classificação de tipo, criadas na api v1"
                  }
                ]
              },
              "TotalFraudTransactionAmount": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Valor total das transações liquidadas no SPI associadas a marcações de fraude, excluindo as de tipo APPLICATION_FRAUD e UNKNOWN.\nValor é truncado na parte inteira."
                  }
                ]
              },
              "DistinctFraudReporters": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de participantes distintos que geraram marcações de fraude, excluindo as de tipo UNKNOWN"
                  }
                ]
              }
            }
          },
          "InfractionReports": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "OpenReports": {
                "type": "integer",
                "description": "Número de notificações de infração ainda não concluídas nem canceladas"
              },
              "OpenReportsDistinctReporters": {
                "type": "integer",
                "description": "Número de participantes distintos criadores de notificações de infração ainda não concluídas nem canceladas"
              },
              "RejectedReports": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de notificações de infração concluídas com rejeição."
                  }
                ]
              }
            }
          },
          "Entries": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "RegisteredAccounts": {
                "type": "integer",
                "description": "Número de contas da pessoa associadas a chaves atualmente registradas"
              }
            }
          }
        },
        "required": [
          "SPI",
          "FraudMarkers",
          "InfractionReports",
          "Entries"
        ]
      },
      "KeyStatistics": {
        "type": "object",
        "description": "Estatísticas associadas à chave.",
        "properties": {
          "Spi": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "Settlements": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de liquidações em que a chave foi usada no SPI"
                  }
                ]
              }
            }
          },
          "FraudMarkers": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "ApplicationFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo APPLICATION_FRAUD"
                  }
                ]
              },
              "MuleAccounts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo MULE_ACCOUNT"
                  }
                ]
              },
              "ScammerAccounts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo SCAMMER_ACCOUNT"
                  }
                ]
              },
              "OtherFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude com tipo OTHER"
                  }
                ]
              },
              "UnknownFrauds": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de marcações de fraude sem classificação de tipo, criadas na api v1"
                  }
                ]
              },
              "TotalFraudTransactionAmount": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Valor total das transações liquidadas no SPI associadas a marcações de fraude, excluindo as de tipo UNKNOWN.\nValor é truncado na parte inteira."
                  }
                ]
              },
              "DistinctFraudReporters": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de participantes distintos que geraram marcações de fraude, excluindo as de tipo UNKNOWN"
                  }
                ]
              }
            }
          },
          "InfractionReports": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "OpenReports": {
                "type": "integer",
                "description": "Número de notificações de infração ainda não concluídas nem canceladas"
              },
              "OpenReportsDistinctReporters": {
                "type": "integer",
                "description": "Número de participantes distintos criadores de notificações de infração ainda não concluídas nem canceladas"
              },
              "RejectedReports": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Número de notificações de infração concluídas com rejeição"
                  }
                ]
              }
            }
          },
          "Entries": {
            "type": "object",
            "properties": {
              "Watermark": {
                "type": "string",
                "format": "date-time",
                "description": "data-hora do último evento considerado"
              },
              "DistinctAccounts": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WindowedValue"
                  },
                  {
                    "description": "Quantidade de contas distintas em que houve registro da chave"
                  }
                ]
              }
            }
          }
        },
        "required": [
          "SPI",
          "InfractionReports",
          "Entries"
        ]
      },
      "InfractionNotificationReason": {
        "type": "string",
        "description": "Motivo da notificação de infração",
        "enum": [
          "REFUND_REQUEST",
          "REFUND_CANCELLED"
        ]
      },
      "SituationType": {
        "type": "string",
        "enum": [
          "SCAM",
          "ACCOUNT_TAKEOVER",
          "COERCION",
          "FRAUDULENT_ACCESS",
          "OTHER",
          "UNKNOWN"
        ]
      },
      "FraudType": {
        "type": "string",
        "enum": [
          "APPLICATION_FRAUD",
          "MULE_ACCOUNT",
          "SCAMMER_ACCOUNT",
          "OTHER",
          "UNKNOWN"
        ]
      },
      "InfractionReportStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "ACKNOWLEDGED",
          "CLOSED",
          "CANCELLED"
        ]
      },
      "AnalysisResult": {
        "type": "string",
        "description": "Resultado da análise da infração.",
        "enum": [
          "AGREED",
          "DISAGREED"
        ]
      },
      "AnalysisDetails": {
        "description": "Detalhes da análise da notificação de infração. Obrigatório caso FraudType=OTHER",
        "maxLength": 2000
      },
      "InfractionReport": {
        "type": "object",
        "description": "Notificação de infração para uma transação liquidada no SPI.",
        "properties": {
          "TransactionId": {
            "type": "string",
            "description": "Identificador da transação liquidada no SPI.",
            "example": "E9999901012341234123412345678900",
            "pattern": "\\w{8,32}"
          },
          "Reason": {
            "$ref": "#/components/schemas/InfractionNotificationReason"
          },
          "SituationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SituationType"
              },
              {
                "description": "Tipo de situação que deu origem à notificação de infração. Caso Reason=REFUND_CANCELLED, deve ser preenchido com OTHER. Caso criado na v1, será retornado com UNKNOWN."
              }
            ]
          },
          "ContactInformation": {
            "type": "object",
            "description": "Informações de contato do participante criador da notificação de infração.",
            "properties": {
              "Email": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Email"
                  },
                  {
                    "description": "Email para contato."
                  }
                ]
              },
              "Phone": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Phone"
                  },
                  {
                    "description": "Telefone para contato."
                  }
                ]
              }
            },
            "required": [
              "Email",
              "Phone"
            ]
          },
          "ReportDetails": {
            "description": "Detalhes que possam ajudar o PSP contraparte na análise. Obrigatório caso SituationType=OTHER",
            "maxLength": 2000
          }
        },
        "required": [
          "TransactionId",
          "SituationType",
          "Reason",
          "ContactInformation"
        ]
      },
      "Email": {
        "type": "string",
        "pattern": "^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$"
      },
      "Phone": {
        "type": "string",
        "pattern": "^\\+[0-9]\\d{1,14}$"
      },
      "FraudMarker": {
        "type": "object",
        "description": "Marcação de fraude transacional.",
        "properties": {
          "TaxIdNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxIdNumber"
              },
              {
                "description": "CPF ou CNPJ do usuário ao qual será associada a marcação de fraude."
              }
            ]
          },
          "Key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Key"
              },
              {
                "description": "Chave ao qual será associada a marcação de fraude. Deve ser informada, caso seja conhecida."
              }
            ]
          },
          "FraudType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FraudType"
              },
              {
                "description": "Tipo de fraude. Para marcações de fraude vindas de notificações de infração fechadas na api v1, constará o valor `UNKNOWN`."
              }
            ]
          }
        },
        "required": [
          "TaxIdNumber",
          "FraudType"
        ]
      },
      "FraudMarkerStatus": {
        "type": "string",
        "enum": [
          "REGISTERED",
          "CANCELLED"
        ]
      },
      "ExtendedFraudMarker": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FraudMarker"
          },
          {
            "type": "object",
            "xml": {
              "name": "FraudMarker"
            },
            "properties": {
              "Id": {
                "type": "string",
                "format": "uuid"
              },
              "Status": {
                "$ref": "#/components/schemas/FraudMarkerStatus"
              },
              "CreationTime": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da criação do marcador de fraude"
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da última atualização de status"
              },
              "InfrationReport": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SummarizedInfractionReport"
                  },
                  {
                    "description": "Notificação de infração que gerou a marcação de fraude."
                  }
                ]
              }
            },
            "required": [
              "Id",
              "Status",
              "CreationTime",
              "LastModified"
            ]
          }
        ]
      },
      "TaxIdNumber": {
        "type": "string",
        "pattern": "([0-9]{11}|[0-9]{14})",
        "example": "12345678901"
      },
      "ExtendedInfractionReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InfractionReport"
          },
          {
            "type": "object",
            "xml": {
              "name": "InfractionReport"
            },
            "properties": {
              "Id": {
                "type": "string",
                "format": "uuid"
              },
              "Status": {
                "$ref": "#/components/schemas/InfractionReportStatus"
              },
              "ReporterParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante criador da notificação de infração."
                  }
                ]
              },
              "CounterpartyParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante contraparte na notificação de infração."
                  }
                ]
              },
              "FraudMarkerId": {
                "type": "string",
                "format": "uuid",
                "description": "Id da marcação de fraude. Presente após fechamento com AnalysisResult=AGREED."
              },
              "AnalysisResult": {
                "$ref": "#/components/schemas/AnalysisResult"
              },
              "AnalysisDetails": {
                "$ref": "#/components/schemas/AnalysisDetails"
              },
              "CreationTime": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da criação da notificação de infração"
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da última atualização de status"
              }
            },
            "required": [
              "Id",
              "Status",
              "SituationType",
              "ReporterParticipant",
              "CounterpartyParticipant",
              "CreationTime",
              "LastModified"
            ]
          }
        ]
      },
      "SummarizedInfractionReport": {
        "xml": {
          "name": "InfractionReport"
        },
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "ReporterParticipant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que criou a notificação de infração."
              }
            ]
          }
        },
        "required": [
          "Id",
          "ReporterParticipant"
        ]
      },
      "SummarizedFraudMarker": {
        "xml": {
          "name": "FraudMarker"
        },
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "RegistrantParticipant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que registrou a marcação de fraude."
              }
            ]
          }
        },
        "required": [
          "Id",
          "RegistrantParticipant"
        ]
      },
      "Person": {
        "type": "object",
        "description": "Dados de pessoa física ou jurídica",
        "oneOf": [
          {
            "type": "object",
            "title": "NATURAL_PERSON",
            "properties": {
              "Type": {
                "description": "Tipo de pessoa",
                "type": "string",
                "example": "NATURAL_PERSON"
              },
              "TaxIdNumber": {
                "type": "string",
                "description": "CPF - Cadastro de Pessoa Física",
                "pattern": "^[0-9]{11}$",
                "example": "11122233300"
              },
              "Name": {
                "type": "string",
                "description": "Nome completo",
                "example": "João Silva",
                "maxLength": 150,
                "pattern": "^([A-Za-zÀ-ÖØ-öø-ÿ' -]+)$"
              }
            },
            "required": [
              "Type",
              "TaxIdNumber",
              "Name"
            ]
          },
          {
            "type": "object",
            "title": "LEGAL_PERSON",
            "properties": {
              "Type": {
                "description": "Tipo de pessoa",
                "type": "string",
                "example": "LEGAL_PERSON"
              },
              "TaxIdNumber": {
                "type": "string",
                "description": "CNPJ - Cadastro Nacional de Pessoa Jurídica",
                "example": "11222333000150",
                "pattern": "[0-9]{14}"
              },
              "Name": {
                "type": "string",
                "description": "Razão social.",
                "maxLength": 150,
                "example": "Padaria Tres Irmãos Ltda",
                "pattern": "^([A-Za-zÀ-ÖØ-öø-ÿ,.@:&*+_<>()!?/\\\\$%\\d' -]+)$"
              },
              "TradeName": {
                "type": "string",
                "description": "Nome fantasia.",
                "maxLength": 100,
                "example": "Padaria 3 Irmãos",
                "pattern": "^([A-Za-zÀ-ÖØ-öø-ÿ,.@:&*+_<>()!?/\\\\$%\\d' -]+)$"
              }
            },
            "required": [
              "Type",
              "TaxIdNumber",
              "Name"
            ]
          }
        ]
      },
      "Refund": {
        "type": "object",
        "description": "Solicitação de devolução de uma transação.",
        "properties": {
          "TransactionId": {
            "type": "string",
            "description": "Transação sendo contestada.",
            "example": "E9999901012341234123412345678900",
            "pattern": "\\w{32}"
          },
          "RefundReason": {
            "$ref": "#/components/schemas/RefundReason"
          },
          "RefundAmount": {
            "type": "number",
            "format": "currency",
            "description": "Valor solicitado para devolução.",
            "example": "100.00"
          },
          "RefundDetails": {
            "description": "Breve descrição do motivo da solicitação de devolução. Obrigatório se RefundReason for `OPERATIONAL_FLAW`.",
            "maxLength": 2000
          }
        },
        "required": [
          "TransactionId",
          "RefundReason",
          "RefundAmount"
        ]
      },
      "ExtendedRefund": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Refund"
          },
          {
            "type": "object",
            "xml": {
              "name": "Refund"
            },
            "properties": {
              "Id": {
                "type": "string",
                "format": "uuid"
              },
              "Status": {
                "$ref": "#/components/schemas/RefundStatus"
              },
              "RequestingParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante solicitante da devolução."
                  }
                ]
              },
              "ContestedParticipant": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ISPB"
                  },
                  {
                    "description": "Identificador SPB do participante sendo contestado."
                  }
                ]
              },
              "CreationTime": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da criação da requisição de devolução."
              },
              "LastModified": {
                "type": "string",
                "format": "date-time",
                "description": "Data-hora da última atualização de status."
              },
              "InfractionReportId": {
                "type": "string",
                "format": "uuid",
                "description": "Identificador da notificação de infração no caso de devolução por fraude."
              },
              "AnalysisResult": {
                "$ref": "#/components/schemas/RefundAnalysisResult"
              },
              "AnalysisDetails": {
                "$ref": "#/components/schemas/RefundAnalysisDetails"
              },
              "RefundRejectionReason": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RefundRejectionReason"
                  },
                  {
                    "description": "Razão da rejeição da solicitação de devolução."
                  }
                ]
              },
              "RefundTransactionId": {
                "type": "string",
                "description": "Transação de devolução (completa ou parcial)",
                "example": "D9999901012341234123412345678900",
                "pattern": "\\w{32}"
              }
            },
            "required": [
              "Id",
              "Status",
              "RequestingParticipant",
              "ContestedParticipant",
              "CreationTime",
              "LastModified"
            ]
          }
        ]
      },
      "RefundStatus": {
        "type": "string",
        "enum": [
          "OPEN",
          "CLOSED",
          "CANCELLED"
        ]
      },
      "RefundAnalysisResult": {
        "type": "string",
        "description": "Resultado da análise da requisição de devolução pelo constestado.",
        "enum": [
          "TOTALLY_ACCEPTED",
          "PARTIALLY_ACCEPTED",
          "REJECTED"
        ]
      },
      "RefundAnalysisDetails": {
        "description": "Detalhes da análise da requisição de devolução indicando a motivação do resultado.",
        "maxLength": 2000
      },
      "RefundReason": {
        "type": "string",
        "enum": [
          "FRAUD",
          "OPERATIONAL_FLAW",
          "REFUND_CANCELLED",
          "PIX_AUTOMATICO"
        ],
        "description": "Razão da solicitação de devolução."
      },
      "RefundRejectionReason": {
        "type": "string",
        "enum": [
          "NO_BALANCE",
          "ACCOUNT_CLOSURE",
          "INVALID_REQUEST",
          "OTHER"
        ]
      },
      "Policy": {
        "type": "object",
        "description": "Dados do estado de um balde de uma política de limitação de acesso",
        "properties": {
          "AvailableTokens": {
            "type": "integer",
            "description": "Quantidade de fichas disponíveis no balde no momento da consulta."
          },
          "Capacity": {
            "type": "integer",
            "description": "Capacidade total de fichas do balde."
          },
          "RefillTokens": {
            "type": "integer",
            "description": "Quantidade de fichas de reposição periódica."
          },
          "RefillPeriodSec": {
            "type": "integer",
            "description": "Período de reposição de fichas no balde."
          },
          "Name": {
            "type": "string",
            "example": "ENTRIES_READ_PARTICIPANT_INITIATOR",
            "description": "Nome da política de limitação de acesso."
          }
        },
        "required": [
          "AvailableTokens",
          "Capacity",
          "RefillTokens",
          "RefillPeriodSec",
          "Name"
        ]
      },
      "PolicyCategory": {
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E",
          "F"
        ],
        "description": "Categoria de política de limitação de acesso em que se encontra o participante.",
        "example": "A",
        "pattern": "^[A-F]{1}$"
      },
      "CreateCidSetFileRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves."
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          }
        },
        "required": [
          "Participant",
          "KeyType"
        ]
      },
      "CreateCidSetFileResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "CidSetFile": {
            "$ref": "#/components/schemas/CidSetFile"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "CidSetFile"
        ]
      },
      "GetCidSetFileResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "CidSetFile": {
            "$ref": "#/components/schemas/CidSetFile"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "CidSetFile"
        ]
      },
      "CreateSyncVerificationRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "SyncVerification": {
            "$ref": "#/components/schemas/SyncVerification"
          }
        },
        "required": [
          "SyncVerification"
        ]
      },
      "CreateSyncVerificationResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "SyncVerification": {
            "$ref": "#/components/schemas/ExtendedSyncVerification"
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          }
        },
        "required": [
          "SyncVerification"
        ]
      },
      "ListCidSetEventsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "HasMoreElements": {
            "type": "boolean",
            "description": "Existem mais elementos para iterar"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante custodiante das chaves"
              }
            ]
          },
          "KeyType": {
            "$ref": "#/components/schemas/KeyType"
          },
          "StartTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do primeiro evento da lista"
          },
          "EndTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data-hora do último evento da lista"
          },
          "SyncVerifierStart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo após primeiro evento"
              }
            ]
          },
          "SyncVerifierEnd": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncVerifier"
              },
              {
                "description": "Verificador de sincronismo após último evento"
              }
            ]
          },
          "CidSetEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CidSetEvent"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "HasMoreElements",
          "Participant",
          "KeyType",
          "StartTime",
          "EndTime",
          "SyncVerifierStart",
          "SyncVerifierEnd"
        ]
      },
      "GetEntryByCidResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Cid": {
            "$ref": "#/components/schemas/Cid"
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          },
          "RequestId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestId"
              },
              {
                "description": "RequestId utilizado na criação do vínculo"
              }
            ]
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Cid",
          "Entry",
          "RequestId"
        ]
      },
      "CreateClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Claim": {
            "$ref": "#/components/schemas/Claim"
          }
        },
        "required": [
          "Claim"
        ]
      },
      "CreateClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim"
        ]
      },
      "AcknowledgeClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do doador"
              }
            ]
          }
        },
        "required": [
          "ClaimId",
          "Participant"
        ]
      },
      "AcknowledgeClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim"
        ]
      },
      "ConfirmClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do doador"
              }
            ]
          },
          "Reason": {
            "$ref": "#/components/schemas/ClaimOperationReason"
          }
        },
        "required": [
          "ClaimId",
          "Participant",
          "Reason"
        ]
      },
      "ConfirmClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim"
        ]
      },
      "CancelClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do doador ou reivindicador"
              }
            ]
          },
          "Reason": {
            "$ref": "#/components/schemas/ClaimOperationReason"
          }
        },
        "required": [
          "ClaimId",
          "Participant",
          "Reason"
        ]
      },
      "CancelClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim"
        ]
      },
      "CompleteClaimRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ClaimId": {
            "type": "string",
            "format": "uuid"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do reivindicador"
              }
            ]
          },
          "RequestId": {
            "$ref": "#/components/schemas/RequestId"
          }
        },
        "required": [
          "ClaimId",
          "Participant",
          "RequestId"
        ]
      },
      "CompleteClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          },
          "EntryCreationDate": {
            "$ref": "#/components/schemas/EntryCreationDate"
          },
          "KeyOwnershipDate": {
            "$ref": "#/components/schemas/KeyOwnershipDate"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim",
          "EntryCreationDate",
          "KeyOwnershipDate"
        ]
      },
      "GetClaimResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Claim": {
            "$ref": "#/components/schemas/ExtendedClaim"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Claim"
        ]
      },
      "ListClaimsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "HasMoreElements": {
            "type": "boolean",
            "description": "Existem mais elementos para iterar"
          },
          "Claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedClaim"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "HasMoreElements"
        ]
      },
      "CreateEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Entry": {
            "$ref": "#/components/schemas/Entry"
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED` e `RECONCILIATION`"
              }
            ]
          },
          "RequestId": {
            "$ref": "#/components/schemas/RequestId"
          }
        },
        "required": [
          "Entry",
          "Reason",
          "RequestId"
        ]
      },
      "UpdateEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "Account": {
            "$ref": "#/components/schemas/BrazilianAccount"
          },
          "Owner": {
            "$ref": "#/components/schemas/Person"
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED`, `BRANCH_TRANSFER`, `RECONCILIATION` e `RFB_VALIDATION`"
              }
            ]
          }
        },
        "required": [
          "Key",
          "Reason"
        ]
      },
      "UpdateEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Entry"
        ]
      },
      "CreateEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Entry"
        ]
      },
      "DeleteEntryRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do provedor da conta ao qual a chave está vinculada"
              }
            ]
          },
          "Reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntryOperationReason"
              },
              {
                "description": "Valores válidos: `USER_REQUESTED`, `ACCOUNT_CLOSURE`, `RECONCILIATION`, `FRAUD` e `RFB_VALIDATION`"
              }
            ]
          }
        },
        "required": [
          "Key",
          "Participant",
          "Reason"
        ]
      },
      "DeleteEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Key"
        ]
      },
      "GetEntryResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Entry": {
            "$ref": "#/components/schemas/ExtendedEntry"
          },
          "OwnerStatistics": {
            "$ref": "#/components/schemas/PersonStatistics"
          },
          "KeyStatistics": {
            "$ref": "#/components/schemas/KeyStatistics"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Entry"
        ]
      },
      "CheckKeysRequest": {
        "type": "object",
        "properties": {
          "Keys": {
            "type": "array",
            "minItems": 1,
            "maxItems": 200,
            "description": "Chaves de endereçamento",
            "items": {
              "$ref": "#/components/schemas/Key"
            }
          }
        },
        "required": [
          "Keys"
        ]
      },
      "CheckKeysResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Keys": {
            "type": "array",
            "description": "Chaves de endereçamento",
            "items": {
              "$ref": "#/components/schemas/ExtendedKey"
            }
          }
        },
        "required": [
          "Keys"
        ]
      },
      "CreateInfractionReportRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante criador da notificação de infração"
              }
            ]
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/InfractionReport"
          }
        },
        "required": [
          "Participant",
          "InfractionReport"
        ]
      },
      "CreateInfractionReportResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/ExtendedInfractionReport"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "InfractionReport"
        ]
      },
      "GetInfractionReportResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/ExtendedInfractionReport"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "InfractionReport"
        ]
      },
      "ListInfractionReportsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "HasMoreElements": {
            "type": "boolean",
            "description": "Existem mais elementos para iterar"
          },
          "InfractionReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedInfractionReport"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "HasMoreElements"
        ]
      },
      "AcknowledgeInfractionReportRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "InfractionReportId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da notificação de infração"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante realizando o ACK"
              }
            ]
          }
        },
        "required": [
          "InfractionReportId",
          "Participant"
        ]
      },
      "AcknowledgeInfractionReportResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/ExtendedInfractionReport"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "InfractionReport"
        ]
      },
      "CancelInfractionReportRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "InfractionReportId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da notificação de infração"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que criou a notificação de infração"
              }
            ]
          }
        },
        "required": [
          "InfractionReportId",
          "Participant"
        ]
      },
      "CancelInfractionReportResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/ExtendedInfractionReport"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "InfractionReport"
        ]
      },
      "CloseInfractionReportRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "InfractionReportId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da notificação de infração"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante."
              }
            ]
          },
          "FraudType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FraudType"
              },
              {
                "description": "Tipo de fraude verificada. Obrigatório caso AnalysisResult = AGREED"
              }
            ]
          },
          "AnalysisResult": {
            "$ref": "#/components/schemas/AnalysisResult"
          },
          "AnalysisDetails": {
            "$ref": "#/components/schemas/AnalysisDetails"
          }
        },
        "required": [
          "InfractionReportId",
          "Participant",
          "AnalysisResult"
        ]
      },
      "CloseInfractionReportResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "InfractionReport": {
            "$ref": "#/components/schemas/ExtendedInfractionReport"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "InfractionReport"
        ]
      },
      "CreateFraudMarkerRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante criador da marcação de fraude"
              }
            ]
          },
          "FraudMarker": {
            "$ref": "#/components/schemas/FraudMarker"
          },
          "RequestId": {
            "$ref": "#/components/schemas/RequestId"
          }
        },
        "required": [
          "Participant",
          "FraudMarker",
          "RequestId"
        ]
      },
      "CreateFraudMarkerResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "FraudMarker": {
            "$ref": "#/components/schemas/ExtendedFraudMarker"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId"
        ]
      },
      "GetFraudMarkerResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "FraudMarker": {
            "$ref": "#/components/schemas/ExtendedFraudMarker"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId"
        ]
      },
      "CancelFraudMarkerRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "FraudMarkerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da notificação de infração"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que solicita cancelamento"
              }
            ]
          }
        },
        "required": [
          "FraudMarkerId",
          "Participant"
        ]
      },
      "CancelFraudMarkerResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "FraudMarker": {
            "$ref": "#/components/schemas/ExtendedFraudMarker"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "FraudMarker"
        ]
      },
      "ListPersonFraudMarkersResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "TaxIdNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxIdNumber"
              },
              {
                "description": "CPF ou CNPJ do usuário final"
              }
            ]
          },
          "PersonFraudMarkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummarizedFraudMarker"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "TaxIdNumber"
        ]
      },
      "ListEntryFraudMarkersResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "OwnerFraudMarkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummarizedFraudMarker"
            }
          },
          "KeyFraudMarkers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummarizedFraudMarker"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Key"
        ]
      },
      "CreateRefundRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que está solicitando a devolução."
              }
            ]
          },
          "Refund": {
            "$ref": "#/components/schemas/Refund"
          }
        },
        "required": [
          "Participant",
          "Refund"
        ]
      },
      "CreateRefundResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Refund": {
            "$ref": "#/components/schemas/ExtendedRefund"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Refund"
        ]
      },
      "ListRefundsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "HasMoreElements": {
            "type": "boolean",
            "description": "Existem mais elementos para iterar"
          },
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedRefund"
            }
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "HasMoreElements"
        ]
      },
      "GetRefundResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Refund": {
            "$ref": "#/components/schemas/ExtendedRefund"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Refund"
        ]
      },
      "CancelRefundRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "RefundId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da solicitação de devolução"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante que abriu a solicitação"
              }
            ]
          }
        },
        "required": [
          "RefundId",
          "Participant"
        ]
      },
      "CancelRefundResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Refund": {
            "$ref": "#/components/schemas/ExtendedRefund"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Refund"
        ]
      },
      "CloseRefundRequest": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "RefundId": {
            "type": "string",
            "format": "uuid",
            "description": "ID da solicitação de devolução"
          },
          "Participant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ISPB"
              },
              {
                "description": "Identificador SPB do participante contestado"
              }
            ]
          },
          "RefundAnalysisResult": {
            "$ref": "#/components/schemas/RefundAnalysisResult"
          },
          "RefundAnalysisDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefundAnalysisDetails"
              },
              {
                "description": "Obrigatório quando RefundAnalysisResult=REJECT e RefundRejectionReason=INVALID_REQUEST"
              }
            ]
          },
          "RefundRejectionReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefundRejectionReason"
              },
              {
                "description": "Razão da rejeição da solicitação de devolução. `INVALID_REQUEST` só pode ser usada quando RefundReason for `OPERATIONAL_FLAW` ."
              }
            ]
          },
          "RefundTransactionId": {
            "type": "string",
            "description": "Transação de devolução (completa ou parcial)",
            "example": "D9999901012341234123412345678900",
            "pattern": "\\w{32}"
          }
        },
        "required": [
          "RefundId",
          "Participant",
          "RefundAnalysisResult"
        ]
      },
      "CloseRefundResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Refund": {
            "$ref": "#/components/schemas/ExtendedRefund"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Refund"
        ]
      },
      "GetPersonStatisticsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "TaxIdNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxIdNumber"
              },
              {
                "description": "CPF ou CNPJ do usuário final"
              }
            ]
          },
          "PersonStatistics": {
            "$ref": "#/components/schemas/PersonStatistics"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "PersonStatistics"
        ]
      },
      "GetEntryStatisticsResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Key": {
            "$ref": "#/components/schemas/Key"
          },
          "KeyStatistics": {
            "$ref": "#/components/schemas/KeyStatistics"
          },
          "OwnerStatistics": {
            "$ref": "#/components/schemas/PersonStatistics"
          }
        },
        "required": [
          "ResponseTime",
          "CorrelationId",
          "Key",
          "KeyStatistics",
          "OwnerStatistics"
        ]
      },
      "ListPoliciesResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Category": {
            "$ref": "#/components/schemas/PolicyCategory"
          },
          "Policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "GetPolicyResponse": {
        "type": "object",
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "ResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "CorrelationId": {
            "$ref": "#/components/schemas/CorrelationId"
          },
          "Category": {
            "$ref": "#/components/schemas/PolicyCategory"
          },
          "Policy": {
            "$ref": "#/components/schemas/Policy"
          }
        }
      },
      "Problem": {
        "type": "object",
        "xml": {
          "name": "problem",
          "namespace": "urn:ietf:rfc:7807"
        },
        "properties": {
          "Signature": {
            "type": "object",
            "xml": {
              "prefix": "ds",
              "namespace": "http://www.w3.org/2000/09/xmldsig#"
            }
          },
          "type": {
            "type": "string",
            "format": "uri",
            "example": "https://dict.pi.rsfn.net.br/api/v2/error/NotFound"
          },
          "title": {
            "type": "string",
            "example": "Not found"
          },
          "status": {
            "type": "integer",
            "example": 404
          },
          "detail": {
            "type": "string"
          },
          "correlationId": {
            "type": "string",
            "description": "Identificador de correlação do problema para fins de suporte"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Violation"
            }
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ]
      },
      "Violation": {
        "type": "object",
        "xml": {
          "name": "violation"
        },
        "properties": {
          "reason": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "property": {
            "type": "string"
          }
        },
        "required": [
          "reason"
        ]
      }
    },
    "responses": {
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v2/error/NotFound</type>\n  <title>Not found</title>\n  <status>404</status>\n  <detail>Entry associated with given key does not exist</detail>\n</problem> "
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v2/error/Forbidden</type>\n  <title>Forbidden</title>\n  <status>403</status>\n  <detail>Participant is not allowed to access this resource</detail>\n</problem>"
              }
            }
          }
        }
      },
      "RateLimited": {
        "description": "Rate-Limited",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v2/error/RateLimited</type>\n  <title>Rate limited</title>\n  <status>429</status>\n</problem>"
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "headers": {
          "Retry-After": {
            "schema": {
              "type": "integer"
            },
            "description": "Tempo de espera em segundos sugerido para nova requisição. Ver [rfc7231#section-7.1.3](https://tools.ietf.org/html/rfc7231#section-7.1.3)"
          }
        },
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n  <type>https://dict.pi.rsfn.net.br/api/v2/error/ServiceUnavailable</type>\n  <title>Service Unavailable</title>\n  <status>503</status>\n  <detail>Service is under scheduled maintenance</detail>\n</problem>"
              }
            }
          }
        }
      },
      "ClaimInvalid": {
        "description": "Claim Invalid",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v2/error/ClaimInvalid</type>\n    <title>Claim is invalid</title>\n    <status>400</status>\n    <detail>Claim has invalid fields</detail>\n    <violations>\n        <violation>\n            <reason>Value does not match regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n            <property>claim.key</property>\n        </violation>\n    </violations>                    \n</problem>"
              }
            }
          }
        }
      },
      "InfractionReportInvalid": {
        "description": "InfractionReport Invalid",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v2/error/InfractionReportInvalid</type>\n    <title>InfractionReport is invalid</title>\n    <status>400</status>\n    <detail>InfractionReport has invalid fields</detail>\n    <violations>\n        <violation>\n            <reason>TransactionId does not match regex '^\\w{32}'</reason>\n            <value>9901012341234123412345678900</value>\n            <property>infractionReport.transactionId</property>\n        </violation>\n    </violations>\n</problem>"
              }
            }
          }
        }
      },
      "EntryInvalid": {
        "description": "Entry Invalid",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v2/error/EntryInvalid</type>\n    <title>Entry is invalid</title>\n    <status>400</status>\n    <detail>Entry has invalid fields</detail>\n    <violations>\n        <violation>\n            <reason>Value does not match regex '^\\+[1-9]\\d{1,14}$'</reason>\n            <value>61988887777</value>\n            <property>entry.key</property>\n        </violation>\n    </violations>                    \n</problem>"
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/problem+xml": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            },
            "examples": {
              "example": {
                "value": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<problem xmlns=\"urn:ietf:rfc:7807\">\n    <type>https://dict.pi.rsfn.net.br/api/v2/error/BadRequest</type>\n    <title>Bad Request</title>\n    <status>400</status>\n    <detail>Could not parse request body</detail>\n</problem>"
              }
            }
          }
        }
      }
    }
  }
}