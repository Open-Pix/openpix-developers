openapi: 3.0.3
info:
  title: OpenPix
  description: >-
    A OpenPix é uma Plataforma de Gestão de Pagamentos. Para utilizar nossa API
    você deve
    acessar  __[https://api.openpix.com.br/](https://api.openpix.com.br/)__ e
    somente o mesmo. A OpenPix não aceita subdominios para a API.


    Veja como configurar seu acesso a nossa API [aqui](https://developers.openpix.com.br/docs/apis/api-getting-started).
  version: 1.0.0
servers:
  - url: https://api.openpix.com.br
    description: Production server
security:
  - AppID: []
paths:
  "/api/v1/account/{accountId}":
    get:
      tags:
        - account
      summary: Get an Account
      parameters:
        - name: accountId
          in: path
          description: ID of the Account
          required: true
          schema:
            type: string
          example: 6290ccfd42831958a405debc
      responses:
        "200":
          description: The Account retrieve using the given Account ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    $ref: "#/components/schemas/CompanyBankAccount"
              example:
                account:
                  accountId: 6290ccfd42831958a405debc
                  isDefault: true
                  balance:
                    total: 129430
                    blocked: 0
                    available: 129430
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/account/:
    get:
      tags:
        - account
      summary: Get a list of Accounts
      responses:
        "200":
          description: A list of Accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: "#/components/schemas/CompanyBankAccount"
              example:
                accounts:
                  - accountId: 6290ccfd42831958a405debc
                    isDefault: true
                    balance:
                      total: 129430
                      blocked: 0
                      available: 129430
                  - accountId: 6286b467a7910113577e00ce
                    isDefault: false
                    balance:
                      total: 130
                      blocked: 100
                      available: 30
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/account/{accountId}/withdraw":
    post:
      tags:
        - account
      summary: Withdraw from an Account
      description: An additional fee may be charged depending on the minimum free
        withdrawal amount. See more about at
        https://developers.openpix.com.br/docs/FAQ/faq-virtual-account/#onde-posso-consultar-as-taxas-da-minha-conta-virtual
      parameters:
        - name: accountId
          in: path
          description: ID of the Account
          required: true
          schema:
            type: string
          example: 6290ccfd42831958a405debc
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: number
                  description: Value in cents
            example:
              value: 7000
      responses:
        "200":
          description: Withdraw and Acccount information
          content:
            application/json:
              schema:
                type: object
                properties:
                  withdraw:
                    type: object
                    properties:
                      account:
                        type: object
                        $ref: "#/components/schemas/CompanyBankAccount"
                      transaction:
                        type: object
                        $ref: "#/components/schemas/WithdrawTransaction"
              example:
                withdraw:
                  account:
                    accountId: 6290ccfd42831958a405debc
                    isDefault: true
                    balance:
                      total: 122430
                      blocked: 0
                      available: 122430
                  transaction:
                    endToEndId: E23114447202205191817cx6VMrbwtw6
                    transaction: 7000
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/cashback-fidelity/balance/{taxID}":
    get:
      tags:
        - cashback-fidelity
      summary: Get the exclusive cashback amount an user still has to receive by taxID.
      parameters:
        - name: taxID
          in: path
          description: The raw tax ID from the customer you want to get the balance.
          required: true
          schema:
            type: string
          examples:
            taxID:
              value: "60151449000182"
      responses:
        "200":
          description: Amount the user still has to receive.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                  status:
                    type: string
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/cashback-fidelity:
    post:
      tags:
        - cashback-fidelity
      summary: Get or create cashback for a customer.
      description: Create a new cashback exclusive for the customer with a given
        taxID. If the customer already has a pending excluisve cashback, this
        endpoint will return it instead.
      requestBody:
        description: Customer's taxID and the cash
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taxID:
                  type: string
                  description: Customer taxID (CPF or CNPJ)
                value:
                  type: number
                  description: Cashback value in centavos
            example:
              value: 100
              taxID: 11111111111
      responses:
        "200":
          description: Didn't create a new cashback, returning previously existing
            cashback information instead.
          content:
            application/json:
              schema:
                type: object
                properties:
                  cashback:
                    description: Object representing the existing cashback
                    type: object
                    properties:
                      value:
                        type: number
                        description: Cashback value in centavos
                  message:
                    type: string
                    description: String explaining what happened
        "201":
          description: New cashback created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cashback:
                    description: Object representing the new cashback
                    type: object
                    properties:
                      value:
                        type: number
                        description: Cashback value in centavos
                  message:
                    type: string
                    description: String explaining what happened
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/charge/{id}":
    delete:
      tags:
        - charge
      summary: Delete a charge
      parameters:
        - name: id
          in: path
          description: charge ID or correlation ID. You will need URI encoding if your
            correlation ID has characters outside the ASCII set or reserved
            characters (%, \#, /).
          required: true
          schema:
            type: string
          examples:
            chargeId:
              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==
            correlationID:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: The charge deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  id:
                    type: string
                    description: the id previously informed to be found and deleted
                example:
                  status: OK
                  id: fe7834b4060c488a9b0f89811be5f5cf
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      tags:
        - charge
      summary: Get one charge
      parameters:
        - name: id
          in: path
          description: charge ID or correlation ID. You will need URI encoding if your
            correlation ID has characters outside the ASCII set or reserved
            characters (%, \#, /).
          required: true
          schema:
            type: string
          example: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: The charge retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  charge:
                    type: object
                    $ref: "#/components/schemas/Charge"
                example:
                  charge:
                    status: ACTIVE
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
                    value: 100
                    comment: good
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    paymentLinkID: 7777-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                    globalID: Q2hhcmdlOjcxOTFmMWIwMjA0NmJmNWY1M2RjZmEwYg==
                    qrCodeImage: https://api.openpix.com.br/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                    additionalInfo:
                      - key: Product
                        value: Pencil
                      - key: Invoice
                        value: "18476"
                      - key: Order
                        value: "302"
                    expiresIn: 2592000
                    expiresDate: 2021-04-01T17:28:51.882Z
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/charge:
    get:
      tags:
        - charge
      summary: Get a list of charges
      parameters:
        - in: query
          name: start
          schema:
            $ref: "#/components/schemas/Start"
        - in: query
          name: end
          schema:
            $ref: "#/components/schemas/End"
        - name: status
          in: query
          schema:
            type: string
            enum:
              - ACTIVE
              - COMPLETED
              - EXPIRED
        - name: customer
          description: Customer Correlation ID
          in: query
          schema:
            type: string
      responses:
        "200":
          description: A list of charges
          content:
            application/json:
              schema:
                type: object
                properties:
                  charges:
                    type: array
                    items:
                      $ref: "#/components/schemas/Charge"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                example:
                  pageInfo:
                    skip: 0
                    limit: 10
                    totalCount: 20
                    hasPreviousPage: false
                    hasNextPage: true
                  charges:
                    status: ACTIVE
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
                    value: 100
                    comment: good
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                    qrCodeImage: https://api.openpix.com.br/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                    additionalInfo:
                      - key: Product
                        value: Pencil
                      - key: Invoice
                        value: "18476"
                      - key: Order
                        value: "302"
                    expiresIn: 2592000
                    expiresDate: 2021-04-01T17:28:51.882Z
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - charge
      summary: Create a new Charge
      parameters:
        - in: query
          name: return_existing
          description: Make the endpoint idempotent, will return an existent charge if
            already has a one with the correlationID
          required: false
          schema:
            type: boolean
          examples:
            return_existing:
              value: true
      description: Endpoint to create a new Charge for a customer
      requestBody:
        description: Data to create a new charge
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ChargePayload"
            examples:
              Charge:
                value:
                  correlationID: 9134e286-6f71-427a-bf00-241681624587
                  value: 100
                  comment: good
                  customer:
                    name: Dan
                    taxID: "31324227036"
                    email: email0@example.com
                    phone: "5511999999999"
                  additionalInfo:
                    - key: Product
                      value: Pencil
                    - key: Invoice
                      value: "18476"
                    - key: Order
                      value: "302"
              Charge with Interests and Fines:
                value:
                  type: OVERDUE
                  correlationID: 9134e286-6f71-427a-bf00-241681624587
                  value: 100
                  comment: good
                  daysForDueDate: 5
                  daysAfterDueDate: 5
                  interests:
                    value: 10
                  fines:
                    value: 20
                  customer:
                    name: Dan
                    taxID: "31324227036"
                    email: email0@example.com
                    phone: "5511999999999"
                    address:
                      zipcode: "30421322"
                      street: Street
                      number: "100"
                      neighborhood: Neighborhood
                      city: Belo Horizonte
                      state: MG
                      complement: APTO
                      country: BR
                  additionalInfo:
                    - key: Product
                      value: Pencil
                    - key: Invoice
                      value: "18476"
                    - key: Order
                      value: "302"
      responses:
        "200":
          description: Charge ID and also the generated Dynamic BR Code to be rendered as
            a QRCode
          content:
            application/json:
              schema:
                type: object
                properties:
                  charge:
                    $ref: "#/components/schemas/Charge"
                  correlationID:
                    type: string
                  brCode:
                    type: string
                example:
                  charge:
                    status: ACTIVE
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
                    value: 100
                    comment: good
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                    qrCodeImage: https://api.openpix.com.br/openpix/charge/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                    expiresIn: 2592000
                    expiresDate: 2021-04-01T17:28:51.882Z
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                    additionalInfo:
                      - key: Product
                        value: Pencil
                      - key: Invoice
                        value: "18476"
                      - key: Order
                        value: "302"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/charge/{id}/refund":
    get:
      tags:
        - charge refund
      summary: Get all refunds of a charge
      description: Endpoint to get all refunds of a charge
      parameters:
        - name: id
          in: path
          description: The correlation ID of the charge. You will need URI encoding if
            your correlation ID has characters outside the ASCII set or reserved
            characters (%, \#, /).
          required: true
          schema:
            type: string
          examples:
            uuid:
              value: cf4012c9-b2ac-484d-8121-deedd1c6d8af
            random-string:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: A list of refunds
          content:
            application/json:
              schema:
                type: object
                properties:
                  refunds:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChargeRefund"
                example:
                  refunds:
                    - status: IN_PROCESSING
                      value: 10
                      correlationID: 9134e286-6f71-427a-bf00-241681624586
                      endToEndId: E23114447202304181826HJNwY577YDX
                      time: 2021-03-02T17:28:51.882Z
                    - status: CONFIRMED
                      value: 40
                      correlationID: 589a378e-ab45-4f30-bd4d-4496c60f88cf
                      endToEndId: E23114447202304181057pOhPMsp2pJZ
                      time: 2021-03-05T14:49:02.922Z
                      comment: Comentário do reembolso
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - charge refund
      summary: Create a new refund for a charge
      description: Endpoint to create a new refund for a charge
      parameters:
        - name: id
          in: path
          description: The correlation ID of the charge. You will need URI encoding if
            your correlation ID has characters outside the ASCII set or reserved
            characters (%, \#, /).
          required: true
          schema:
            type: string
          examples:
            uuid:
              value: cf4012c9-b2ac-484d-8121-deedd1c6d8af
            random-string:
              value: fe7834b4060c488a9b0f89811be5f5cf
      requestBody:
        description: Data to create a new refund for a charge
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ChargeRefundPayload"
            example:
              correlationID: a273e72c-9547-4c75-a213-3b0a2735b8d5
              value: 100
              comment: Comentário do reembolso
      responses:
        "200":
          description: The created Refund
          content:
            application/json:
              schema:
                type: object
                properties:
                  refund:
                    $ref: "#/components/schemas/ChargeRefund"
                example:
                  refund:
                    status: IN_PROCESSING
                    value: 100
                    correlationID: a273e72c-9547-4c75-a213-3b0a2735b8d5
                    endToEndId: E23114447202304181826HJNwY577YDX
                    time: 2023-03-02T17:28:51.882Z
                    comment: Comentário do reembolso
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/customer/{id}":
    get:
      tags:
        - customer
      summary: Get one customer
      parameters:
        - name: id
          in: path
          description: correlation ID
          required: true
          schema:
            type: string
          examples:
            correlationID:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: The customer retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    type: object
                    $ref: "#/components/schemas/Customer"
                example:
                  customer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    correlationID: fe7834b4060c488a9b0f89811be5f5cf
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/customer:
    get:
      tags:
        - customer
      summary: Get a list of customers
      responses:
        "200":
          description: A list of customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  customers:
                    type: array
                    items:
                      $ref: "#/components/schemas/Customer"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                example:
                  pageInfo:
                    skip: 0
                    limit: 10
                    totalCount: 20
                    hasPreviousPage: false
                    hasNextPage: true
                  customers:
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - customer
      summary: Create a new Customer
      description: Endpoint to create a new Customer
      requestBody:
        description: Data to create a new customer
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CustomerPayload"
            example:
              name: Dan
              taxID: "31324227036"
              email: email0@example.com
              phone: "5511999999999"
              correlationID: 9134e286-6f71-427a-bf00-241681624586
              address:
                zipcode: "30421322"
                street: Street
                number: "100"
                neighborhood: Neighborhood
                city: Belo Horizonte
                state: MG
                complement: APTO
                country: BR
      responses:
        "200":
          description: Customer ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    $ref: "#/components/schemas/Customer"
                example:
                  customer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    address:
                      zipcode: "30421322"
                      street: Street
                      number: "100"
                      neighborhood: Neighborhood
                      city: Belo Horizonte
                      state: MG
                      complement: APTO
                      country: BR
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/partner/application:
    post:
      tags:
        - partner (request access)
      summary: Create a new application to some of your preregistration's company.
      description: >
        As a partner company, you can create a new application to some of your
        companies.

        The application should give access to our API to this companies, so they can use

        it too.
      requestBody:
        description: The request body to create a pre registration.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name you want to give your application
                    type:
                      $ref: "#/components/schemas/ApplicationEnumTypePayload"
                  required:
                    - name
                    - type
                taxID:
                  $ref: "#/components/schemas/TaxIDObjectPayload"
                  required:
                    - taxID
                    - type
            example:
              application:
                name: MyAPIAccess
                type: API
              taxID:
                taxID: "65914571000187"
                type: BR:CNPJ
      responses:
        "200":
          description: >
            Our "idempotence output", if you get this HTTP code, it's an
            application

            that already has been registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: "#/components/schemas/PartnerApplicationPayload"
        "201":
          description: >
            A new application has been registered. It'll be identified by the
            name that you give to it

            and by the company that has been referenced.
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    $ref: "#/components/schemas/PartnerApplicationPayload"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: You are unauthorized to use this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/partner/company/{taxID}":
    get:
      tags:
        - partner (request access)
      summary: Get an specific preregistration via taxID param.
      parameters:
        - name: taxID
          in: path
          description: The raw tax ID from the preregistration that you want to get.
          required: true
          schema:
            type: string
          examples:
            taxID:
              value: "60151449000182"
      responses:
        "200":
          description: The preregistration retrieved by the tax ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  preRegistration:
                    type: object
                    properties:
                      preRegistration:
                        $ref: "#/components/schemas/PreRegistrationObjectPayload"
                      user:
                        $ref: "#/components/schemas/PreRegistrationUserObject"
                      company:
                        $ref: "#/components/schemas/CompanyObjectPayload"
                      account:
                        $ref: "#/components/schemas/AccountObjectPayload"
                    required:
                      - preRegistration
                      - user
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/partner/company:
    get:
      tags:
        - partner (request access)
      summary: Get every preregistration that is managed by you.
      responses:
        "200":
          description: A list with preregistrations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  preRegistrations:
                    type: array
                    items:
                      type: object
                      properties:
                        preRegistration:
                          $ref: "#/components/schemas/PreRegistrationObjectPayload"
                        user:
                          $ref: "#/components/schemas/PreRegistrationUserObject"
                        company:
                          $ref: "#/components/schemas/CompanyObjectPayload"
                        account:
                          $ref: "#/components/schemas/AccountObjectPayload"
                      required:
                        - preRegistration
                        - user
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - partner (request access)
      summary: Create a pre registration with a partner reference (your company)
      description: >
        As a partner company, you can create a new pre registration referencing
        your

        company as a partner.
      requestBody:
        description: The request body to create a pre registration.
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/PreRegistrationPayloadObject"
            example:
              preRegistration:
                name: Example LLC
                taxID:
                  taxID: "11111111111111"
                  type: BR:CNPJ
                website: examplellc.com
              user:
                firstName: John
                lastName: Doe
                email: johndoe@examplellc.com
                phone: "+5511912345678"
      responses:
        "200":
          description: >
            Payload with a pre registration data.

            Being the taxID our idempotence key, if you do the request with the same taxID multiple times,

            every time you'll receive the same data from our endpoint.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreRegistrationPayloadObject"
        "201":
          description: A new preregistration that is related to you has been created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreRegistrationPayloadObject"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "403":
          description: You are unauthorized to use this endpoint.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/payment/approve:
    post:
      tags:
        - payment (request access)
      summary: Approve a Payment Request
      description: Endpoint to approve a payment
      requestBody:
        description: Data to approve a payment request
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/PaymentApprovePayload"
            example:
              correlationID: payment1
      responses:
        "200":
          description: The approved payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    type: object
                    $ref: "#/components/schemas/Payment"
                  transaction:
                    type: object
                    $ref: "#/components/schemas/PaymentTransaction"
                  destination:
                    type: object
                    $ref: "#/components/schemas/PaymentDestination"
                example:
                  payment:
                    value: 100
                    status: APPROVED
                    destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                    comment: payment comment
                    correlationID: payment1
                    sourceAccountId: my-source-account-id
                  transaction:
                    value: 100
                    endToEndId: transaction-end-to-end-id
                    time: 2023-03-20T13:14:17.000Z
                  destination:
                    name: Dan
                    taxID: "31324227036"
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
                    bank: A Bank
                    branch: "1"
                    account: "123456"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/payment/{id}":
    get:
      tags:
        - payment (request access)
      summary: Get one Payment
      parameters:
        - name: id
          in: path
          description: payment ID or correlation ID
          required: true
          schema:
            type: string
          examples:
            paymentID:
              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==
            correlationID:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: The payment retrieved using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    type: object
                    $ref: "#/components/schemas/Payment"
                  transaction:
                    type: object
                    $ref: "#/components/schemas/PaymentTransaction"
                  destination:
                    type: object
                    $ref: "#/components/schemas/PaymentDestination"
                example:
                  payment:
                    value: 100
                    status: CONFIRMED
                    destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                    comment: payment comment
                    correlationID: payment1
                    sourceAccountId: my-source-account-id
                  transaction:
                    value: 100
                    endToEndId: transaction-end-to-end-id
                    time: 2023-03-20T13:14:17.000Z
                  destination:
                    name: Dan
                    taxID: "31324227036"
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
                    bank: A Bank
                    branch: "1"
                    account: "123456"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/payment:
    get:
      tags:
        - payment (request access)
      summary: Get a list of payments
      responses:
        "200":
          description: A list of payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        payment:
                          type: object
                          $ref: "#/components/schemas/Payment"
                        transaction:
                          type: object
                          $ref: "#/components/schemas/PaymentTransaction"
                        destination:
                          type: object
                          $ref: "#/components/schemas/PaymentDestination"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
              example:
                pageInfo:
                  skip: 0
                  limit: 10
                  totalCount: 20
                  hasPreviousPage: false
                  hasNextPage: true
                payments:
                  payment:
                    value: 100
                    status: CONFIRMED
                    destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                    comment: payment comment
                    correlationID: payment1
                    sourceAccountId: my-source-account-id
                  transaction:
                    value: 100
                    endToEndId: transaction-end-to-end-id
                    time: 2023-03-20T13:14:17.000Z
                  destination:
                    name: Dan
                    taxID: "31324227036"
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
                    bank: A Bank
                    branch: "1"
                    account: "123456"
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - payment (request access)
      summary: Create a Payment Request
      description: Endpoint to request a payment
      requestBody:
        description: Data to create a payment request
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/PaymentCreatePayload"
            examples:
              pixKey:
                summary: Pix Key
                value:
                  value: 100
                  destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                  destinationAliasType: RANDOM
                  comment: payment comment
                  correlationID: payment1
                  sourceAccountId: my-source-account-id
              qrCode:
                summary: QR Code
                value:
                  qrCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009SaoPaulo62360532867ba5173c734202ac659721306b38c963044BCA
                  comment: payment comment
                  correlationID: payment1
                  sourceAccountId: my-source-account-id
      responses:
        "200":
          description: Payment destination account information
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment:
                    $ref: "#/components/schemas/Payment"
              examples:
                pixKey:
                  summary: Pix Key
                  value:
                    payment:
                      value: 100
                      status: CREATED
                      destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                      destinationAliasType: RANDOM
                      comment: payment comment
                      correlationID: payment1
                      sourceAccountId: my-source-account-id
                qrCode:
                  summary: QR Code
                  value:
                    payment:
                      value: 100
                      status: CREATED
                      destinationAlias: c4249323-b4ca-43f2-8139-8232aab09b93
                      destinationAliasType: RANDOM
                      qrCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                        Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                      comment: payment comment
                      correlationID: payment1
                      sourceAccountId: my-source-account-id
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/qrcode-static/{id}":
    get:
      tags:
        - pixQrCode
      summary: Get one Pix QrCode
      parameters:
        - name: id
          in: path
          description: pixQrCode ID, correlation ID or emv identifier
          required: true
          schema:
            type: string
          examples:
            pixQrCodeId:
              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==
            correlationID:
              value: fe7834b4060c488a9b0f89811be5f5cf
            identifier:
              value: zr7833b4060c488a9b0f89811
      responses:
        "200":
          description: The pixQrCode retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  pixQrCode:
                    type: object
                    $ref: "#/components/schemas/PixQrCode"
                example:
                  pixQrCode:
                    name: pix qrcode static
                    value: 100
                    comment: pix qrcode static
                    correlationID: fe7834b4060c488a9b0f89811be5f5cf
                    identifier: zr7833b4060c488a9b0f89811
                    paymentLinkID: 7777-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/fe7834b4060c488a9b0f89811be5f5cf
                    qrCodeImage: https://api.openpix.com.br/openpix/charge/brcode/image/fe7834b4060c488a9b0f89811be5f5cf.png
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/qrcode-static:
    get:
      tags:
        - pixQrCode
      summary: Get a list of Pix QrCodes
      responses:
        "200":
          description: A list of pixQrCodes
          content:
            application/json:
              schema:
                type: object
                properties:
                  pixQrCodes:
                    type: array
                    items:
                      $ref: "#/components/schemas/PixQrCode"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                example:
                  pageInfo:
                    skip: 0
                    limit: 10
                    totalCount: 20
                    hasPreviousPage: false
                    hasNextPage: true
                  pixQrCodes:
                    name: pix qrcode
                    value: 100
                    comment: good
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    identifier: zr7833b4060c488a9b0f89811
                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                    qrCodeImage: https://api.openpix.com.br/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - pixQrCode
      summary: Create a new Pix QrCode Static
      description: Endpoint to create a new Pix QrCode Static
      requestBody:
        description: Data to create a new Pix QrCode Static
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/PixQrCodePayload"
            example:
              name: my-qr-code
              correlationID: 9134e286-6f71-427a-bf00-241681624586
              value: 100
              comment: good
      responses:
        "200":
          description: PixQrCode ID and also the generated Dynamic BR Code to be rendered
            as a QRCode
          content:
            application/json:
              schema:
                type: object
                properties:
                  pixQrCode:
                    $ref: "#/components/schemas/PixQrCode"
                  correlationID:
                    type: string
                  brCode:
                    type: string
                example:
                  pixQrCode:
                    value: 100
                    comment: good
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    identifier: zr7833b4060c488a9b0f89811
                    paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586
                    paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                    qrCodeImage: https://api.openpix.com.br/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                    createdAt: 2021-03-02T17:28:51.882Z
                    updatedAt: 2021-03-02T17:28:51.882Z
                    brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                      Paulo62360532867ba5173c734202ac659721306b38c963044BCA
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/refund/{id}":
    get:
      tags:
        - refund
      summary: Get one refund
      parameters:
        - name: id
          in: path
          description: refund ID or correlation ID
          required: true
          schema:
            type: string
          examples:
            id:
              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==
            correlationID:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: The refund retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  pixTransactionRefund:
                    type: object
                    $ref: "#/components/schemas/Refund"
                example:
                  pixTransactionRefund:
                    value: 100
                    correlationID: 7777-6f71-427a-bf00-241681624586
                    refundId: 11bf5b37e0b842e08dcfdc8c4aefc000
                    returnIdentification: D09089356202108032000a543e325902
                    comment: Comentário do reembolso
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/refund:
    get:
      tags:
        - refund
      summary: Get a list of refunds
      responses:
        "200":
          description: A list of refunds
          content:
            application/json:
              schema:
                type: object
                properties:
                  refunds:
                    type: array
                    items:
                      $ref: "#/components/schemas/Refund"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
                example:
                  pageInfo:
                    skip: 0
                    limit: 10
                    totalCount: 20
                    hasPreviousPage: false
                    hasNextPage: true
                  refunds:
                    - status: IN_PROCESSING
                      value: 100
                      correlationID: 9134e286-6f71-427a-bf00-241681624586
                      refundId: 9134e2866f71427abf00241681624586
                      time: 2021-03-02T17:28:51.882Z
                      comment: Comentário do reembolso
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - refund
      summary: Create a new refund
      description: Endpoint to create a new refund for a customer
      requestBody:
        description: Data to create a new refund
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/RefundPayload"
            example:
              transactionEndToEndId: 9134e286-6f71-427a-bf00-241681624586
              correlationID: 9134e286-6f71-427a-bf00-241681624586
              value: 100
              comment: Comentário do reembolso
      responses:
        "200":
          description: The created Refund
          content:
            application/json:
              schema:
                type: object
                properties:
                  refund:
                    $ref: "#/components/schemas/Refund"
                example:
                  refund:
                    status: IN_PROCESSING
                    value: 100
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    refundId: 9134e2866f71427abf00241681624586
                    time: 2021-03-02T17:28:51.882Z
                    comment: Comentário do reembolso
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/subscriptions/{id}":
    get:
      tags:
        - subscription
      summary: Get one subscription
      parameters:
        - name: id
          in: path
          description: The globalID of the subscription.
          required: true
          schema:
            type: string
          example: UGF5bWVudFN1YnNjcmlwdGlvbjo2M2UzYjJiNzczZDNkOTNiY2RkMzI5OTM=
      responses:
        "200":
          description: The subscription retrieved using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription:
                    type: object
                    $ref: "#/components/schemas/Subscription"
                example:
                  subscription:
                    globalID: UGF5bWVudFN1YnNjcmlwdGlvbjo2M2UzYjJiNzczZDNkOTNiY2RkMzI5OTM=
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
                    value: 100
                    dayGenerateCharge: 5
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/subscriptions:
    post:
      tags:
        - subscription
      summary: Create a new Subscription
      description: Endpoint to create a new Subcription
      requestBody:
        description: Data to create a new Subscription
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/SubscriptionPayload"
            examples:
              Subscription:
                value:
                  value: 100
                  customer:
                    name: Dan
                    taxID: "31324227036"
                    email: email0@example.com
                    phone: "5511999999999"
                  dayGenerateCharge: 15
              Subscription with Interests and Fines:
                value:
                  value: 100
                  customer:
                    name: Dan
                    taxID: "31324227036"
                    email: email0@example.com
                    phone: "5511999999999"
                    address:
                      zipcode: "30421322"
                      street: Street
                      number: "100"
                      neighborhood: Neighborhood
                      city: Belo Horizonte
                      state: MG
                      complement: APTO
                      country: BR
                  dayGenerateCharge: 15
                  chargeType: OVERDUE
      responses:
        "200":
          description: The subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription:
                    $ref: "#/components/schemas/Subscription"
                example:
                  subscription:
                    globalID: UGF5bWVudFN1YnNjcmlwdGlvbjo2M2UzYjJiNzczZDNkOTNiY2RkMzI5OTM=
                    customer:
                      name: Dan
                      email: email0@example.com
                      phone: "5511999999999"
                      taxID:
                        taxID: "31324227036"
                        type: BR:CPF
                    value: 100
                    dayGenerateCharge: 5
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/transaction/{id}":
    get:
      tags:
        - transactions
      summary: Get a Transaction
      parameters:
        - name: id
          in: path
          description: you can use the transaction id from openpix or the endToEndId of
            transaction from bank
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The transaction retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    type: object
                    $ref: "#/components/schemas/Transaction"
              example:
                transaction:
                  customer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                  payer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                  charge:
                    status: ACTIVE
                    customer: 603f81fcc6bccc24326ffb43
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    createdAt: 2021-03-03T12:33:00.546Z
                    updatedAt: 2021-03-03T12:33:00.546Z
                  withdraw:
                    value: 100
                    time: 2021-03-03T12:33:00.536Z
                    infoPagador: payer info 1
                    endToEndId: E18236120202012032010s01345689XBY
                    createdAt: 2021-03-03T12:33:00.546Z
                  infoPagador: payer info 0
                  value: 100
                  time: 2021-03-03T12:33:00.536Z
                  transactionID: transactionID
                  type: PAYMENT
                  endToEndId: E18236120202012032010s0133872GZA
                  globalID: UGl4VHJhbnNhY3Rpb246NzE5MWYxYjAyMDQ2YmY1ZjUzZGNmYTBi
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/transaction:
    parameters:
      - in: query
        name: start
        schema:
          $ref: "#/components/schemas/Start"
      - in: query
        name: end
        schema:
          $ref: "#/components/schemas/End"
      - in: query
        name: charge
        description: You can use the charge ID or correlation ID or transaction ID of
          charge to get a list of transactions related of this transaction
        schema:
          type: string
        example: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA
      - in: query
        name: pixQrCode
        description: You can use the QrCode static ID or correlation ID or identifier
          field of QrCode static to get a list of QrCode related of this
          transaction
        schema:
          type: string
        example: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA
      - in: query
        name: withdrawal
        description: You can use the ID or EndToEndId of a withdrawal transaction to get
          all transactions related to the withdrawal
        schema:
          type: string
        example: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA
    get:
      tags:
        - transactions
      summary: Get a list of transactions
      responses:
        "200":
          description: A list of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  transactions:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
              example:
                pageInfo:
                  skip: 0
                  limit: 10
                  totalCount: 20
                  hasPreviousPage: false
                  hasNextPage: true
                transactions:
                  customer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                  payer:
                    name: Dan
                    email: email0@example.com
                    phone: "5511999999999"
                    taxID:
                      taxID: "31324227036"
                      type: BR:CPF
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                  charge:
                    status: ACTIVE
                    customer: 603f81fcc6bccc24326ffb43
                    correlationID: 9134e286-6f71-427a-bf00-241681624586
                    createdAt: 2021-03-03T12:33:00.546Z
                    updatedAt: 2021-03-03T12:33:00.546Z
                  withdraw:
                    value: 100
                    time: 2021-03-03T12:33:00.536Z
                    infoPagador: payer info 1
                    endToEndId: E18236120202012032010s01345689XBY
                  type: PAYMENT
                  infoPagador: payer info 0
                  value: 100
                  time: 2021-03-03T12:33:00.536Z
                  transactionID: transactionID
                  endToEndId: E18236120202012032010s0133872GZA
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/transfer:
    post:
      tags:
        - transfer (request access)
      summary: Create a Transfer
      description: Endpoint to to transfer values between accounts
      requestBody:
        description: Data to create a transfer
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/TransferCreatePayload"
            example:
              value: 100
              fromPixKey: from@openpix.com.br
              toPixKey: to@openpix.com.br
      responses:
        "200":
          description: Transfer transaction information
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: "#/components/schemas/TransferTransaction"
                example:
                  transaction:
                    value: 100
                    time: 2023-06-22T15:33:27.165Z,
                    correlationID: c782e0ac-833d-4a89-9e73-9b60b2b41d3a
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/webhook/{id}":
    delete:
      tags:
        - webhook
      summary: Delete a Webhook
      description: Endpoint to delete a Webhook
      parameters:
        - name: id
          in: path
          description: webhook ID
          required: true
          schema:
            type: string
          examples:
            webhookID:
              value: Q2hhcmdlOjYwM2U3NDlhNDI1NjAyYmJiZjRlN2JlZA==
            id:
              value: fe7834b4060c488a9b0f89811be5f5cf
      responses:
        "200":
          description: Webhook ID and also the status code
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
  /api/v1/webhook:
    get:
      parameters:
        - in: query
          name: url
          description: You can use the url to filter all webhooks
          schema:
            type: string
          example: https://mycompany.com.br/webhook
      tags:
        - webhook
      summary: Get a list of webhooks
      responses:
        "200":
          description: A list of webhooks
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Webhook"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                example:
                  pageInfo:
                    skip: 0
                    limit: 100
                    totalCount: 2
                    hasPreviousPage: false
                    hasNextPage: true
                  webhooks:
                    - id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmMTg=
                      name: webhookName
                      url: https://mycompany.com.br/webhook
                      authorization: openpix
                      event: OPENPIX:TRANSACTION_RECEIVED
                      isActive: true
                      createdAt: 2021-03-02T22:29:10.720Z
                      updatedAt: 2021-03-02T22:29:10.720Z
                    - id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmOTk=
                      name: webhookName
                      url: https://mycompany.com.br/webhook
                      authorization: openpix
                      event: OPENPIX:CHARGE_CREATED
                      isActive: true
                      createdAt: 2021-03-02T22:29:10.720Z
                      updatedAt: 2021-03-02T22:29:10.720Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - webhook
      summary: Create a new Webhook
      description: Endpoint to create a new Webhook
      requestBody:
        description: Data to create a new webhook
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  type: object
                  $ref: "#/components/schemas/WebhookPayload"
              example:
                webhook:
                  name: webhookName
                  event: OPENPIX:CHARGE_CREATED
                  url: https://mycompany.com.br/webhook
                  authorization: openpix
                  isActive: true
      responses:
        "200":
          description: Webhook created specific event when receives a new pix transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    type: object
                    $ref: "#/components/schemas/Webhook"
                example:
                  webhook:
                    id: V2ViaG9vazo2MDNlYmUxZWRlYjkzNWU4NmQyMmNmMTg=
                    name: webhookName
                    url: https://mycompany.com.br/webhook
                    authorization: openpix
                    isActive: true
                    event: OPENPIX:TRANSACTION_RECEIVED
                    createdAt: 2021-03-02T22:29:10.720Z
                    updatedAt: 2021-03-02T22:29:10.720Z
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
      callbacks:
        receivedPix:
          "{$request.body#/webhook.url}":
            post:
              description: >
                Pix - O callback vai ser acionado sempre que um Pix for recebido
                enviando uma charge e um pix
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        charge:
                          type: object
                          $ref: "#/components/schemas/Charge"
                        pix:
                          type: object
                          properties:
                            pixQrCode:
                              type: object
                              $ref: "#/components/schemas/PixQrCode"
                            charge:
                              type: object
                              $ref: "#/components/schemas/Charge"
                            customer:
                              type: object
                              $ref: "#/components/schemas/Customer"
                            payer:
                              type: object
                              $ref: "#/components/schemas/Customer"
                            time:
                              type: string
                            value:
                              type: string
                            transactionID:
                              type: string
                            infoPagador:
                              type: string
                            raw:
                              type: object
                              properties:
                                endToEndId:
                                  type: string
                                txid:
                                  type: string
                                valor:
                                  type: string
                                horario:
                                  type: string
                                infoPagador:
                                  type: string
                        pixQrCode:
                          type: object
                      example:
                        charge:
                          status: COMPLETED
                          customer:
                            name: Julio
                            email: email0@example.com
                            phone: "5511999999999"
                            taxID:
                              taxID: "31928282008"
                              type: BR:CPF
                            correlationID: 9134e286-6f71-427a-bf00-241681624586
                          correlationID: 9134e286-6f71-427a-bf00-241681624586
                          transactionID: 9134e2866f71427abf00241681624586
                          brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                            Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                          createdAt: 2021-03-03T20:49:23.605Z
                          updatedAt: 2021-03-03T20:49:23.668Z
                        pix:
                          pixQrCode: null
                          charge:
                            status: COMPLETED
                            customer: 604002035cce3b60132343cb
                            correlationID: 9134e286-6f71-427a-bf00-241681624586
                            brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                              Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                            createdAt: 2021-03-03T21:39:15.831Z
                            updatedAt: 2021-03-03T21:39:15.896Z
                          customer:
                            name: Julio
                            email: email0@example.com
                            phone: "5511999999999"
                            taxID:
                              taxID: "31928282008"
                              type: BR:CPF
                            correlationID: 9134e286-6f71-427a-bf00-241681624586
                          payer:
                            name: Julio
                            email: email0@example.com
                            phone: "5511999999999"
                            taxID:
                              taxID: "31928282008"
                              type: BR:CPF
                            correlationID: 9134e286-6f71-427a-bf00-241681624586
                          time: 2020-09-09T20:15:00.358Z
                          value: 9999
                          transactionID: 9134e2866f71427abf00241681624586
                          infoPagador: conta
                          raw:
                            endToEndId: 9134e2866f71427abf00241681624586
                            txid: 9134e2866f71427abf00241681624586
                            valor: "99.99"
                            horario: 2020-09-09T20:15:00.358Z
                            infoPagador: conta
                        pixQrCode: null
              responses:
                "200":
                  description: Notificação recebida com sucesso
        receivedPixDetached:
          "{$request.body#/webhook.url}":
            post:
              description: >
                Pix Avulso - O callback vai ser acionado sempre que um Pix for
                recebido devolvendo um pix avulso
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        charge:
                          type: object
                        pix:
                          type: object
                          properties:
                            pixQrCode:
                              type: object
                              $ref: "#/components/schemas/PixQrCode"
                            charge:
                              type: object
                              $ref: "#/components/schemas/Charge"
                            customer:
                              type: object
                              $ref: "#/components/schemas/Customer"
                            payer:
                              type: object
                              $ref: "#/components/schemas/Customer"
                            time:
                              type: string
                            value:
                              type: string
                            transactionID:
                              type: string
                            infoPagador:
                              type: string
                            raw:
                              type: object
                              properties:
                                endToEndId:
                                  type: string
                                txid:
                                  type: string
                                valor:
                                  type: string
                                horario:
                                  type: string
                                infoPagador:
                                  type: string
                        pixQrCode:
                          type: object
                      example:
                        charge: null
                        pix:
                          pixQrCode: null
                          charge: null
                          customer: null
                          time: 2020-09-09T20:15:00.358Z
                          value: 9999
                          transactionID: 9134e2866f71427abf00241681624586
                          infoPagador: conta
                          raw:
                            endToEndId: 9134e2866f71427abf00241681624586
                            txid: 9134e2866f71427abf00241681624586
                            valor: "99.99"
                            horario: 2020-09-09T20:15:00.358Z
                            infoPagador: conta
              responses:
                "200":
                  description: Notificação recebida com sucesso
        receivedPixQrCode:
          "{$request.body#/webhook.url}":
            post:
              description: >
                Pix QrCode - O callback vai ser acionado sempre que um Pix
                QrCOde for recebido devolvendo um pix e um pixQrCode
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        charge:
                          type: object
                        pix:
                          type: object
                          properties:
                            pixQrCode:
                              type: object
                              $ref: "#/components/schemas/PixQrCode"
                            charge:
                              type: object
                              $ref: "#/components/schemas/Charge"
                            payer:
                              type: object
                              $ref: "#/components/schemas/Customer"
                            time:
                              type: string
                            value:
                              type: string
                            transactionID:
                              type: string
                            infoPagador:
                              type: string
                            raw:
                              type: object
                              properties:
                                endToEndId:
                                  type: string
                                txid:
                                  type: string
                                valor:
                                  type: string
                                horario:
                                  type: string
                                infoPagador:
                                  type: string
                        pixQrCode:
                          type: object
                          $ref: "#/components/schemas/PixQrCode"
                      example:
                        charge: null
                        pix:
                          pixQrCode:
                            value: 100
                            comment: good
                            correlationID: 9134e286-6f71-427a-bf00-241681624586
                            identifier: 9134e2866f71427abf00241681624586
                            paymentLinkID: 7777a23s-6f71-427a-bf00-241681624586
                            paymentLinkUrl: https://openpix.com.br/pay/9134e286-6f71-427a-bf00-241681624586
                            qrCodeImage: https://api.openpix.com.br/openpix/pixQrCode/brcode/image/9134e286-6f71-427a-bf00-241681624586.png
                            createdAt: 2021-03-02T17:28:51.882Z
                            updatedAt: 2021-03-02T17:28:51.882Z
                            brCode: 000201010212261060014br.gov.bcb.pix2584https://api.openpix.com.br/openpix/testing?transactionID=867ba5173c734202ac659721306b38c952040000530398654040.015802BR5909LOCALHOST6009Sao
                              Paulo62360532867ba5173c734202ac659721306b38c963044BCA
                          customer: null
                          time: 2020-09-09T20:15:00.358Z
                          value: 9999
                          transactionID: 9134e2866f71427abf00241681624586
                          infoPagador: conta
                          raw:
                            endToEndId: 9134e2866f71427abf00241681624586
                            txid: 9134e2866f71427abf00241681624586
                            valor: "99.99"
                            horario: 2020-09-09T20:15:00.358Z
                            infoPagador: conta
              responses:
                "200":
                  description: Notificação recebida com sucesso
  "/openpix/charge/brcode/image/{:id}.png?size=1024":
    get:
      tags:
        - charge
      summary: Get an image of Qr Code from a Charge
      parameters:
        - in: path
          name: id
          description: charge link payment ID
          required: true
          schema:
            type: string
          examples:
            paymentLinkID:
              value: fe7834b4060c488a9b0f89811be5f5cf
        - in: query
          name: size
          description: Size for the image. This size should be between 600 and 4096. if
            the size parameter was not passed, the default value will be 1024.
          required: false
          schema:
            type: string
          examples:
            size:
              value: 768
      responses:
        "200":
          description: The Qr Code image as MIME type
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/subaccount/{id}/withdraw":
    post:
      tags:
        - sub account (request access)
      summary: Withdraw from a Sub Account
      description: Withdraw from a Sub Account and return the withdrawal transaction
        information
      parameters:
        - name: id
          in: path
          description: pix key registered to the subaccount
          required: true
          schema:
            type: string
          example: destination@test.com
      responses:
        "200":
          description: Withdrawal Transaction information
          content:
            application/json:
              schema:
                type: object
                properties:
                  withdraw:
                    type: object
                    properties:
                      account:
                        type: object
                        $ref: "#/components/schemas/transaction"
              example:
                transaction:
                  status: CREATED
                  value: 100
                  correlationID: TESTING1323
                  destinationAlias: pixKeyTest@test.com
                  comment: testing-transaction
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/subaccount/{id}":
    get:
      tags:
        - sub account (request access)
      summary: Get subaccount details
      parameters:
        - name: id
          in: path
          description: pix key registered to the subaccount
          required: true
          schema:
            type: string
          examples:
            id:
              value: c4249323-b4ca-43f2-8139-8232aab09b93
      responses:
        "200":
          description: The Subccount retrieve using the given pix key
          content:
            application/json:
              schema:
                type: object
                properties:
                  SubAccount:
                    type: object
                    $ref: "#/components/schemas/SubAccount"
                example:
                  SubAccount:
                    name: test-sub-account
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
                    balance: 100
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/subaccount:
    get:
      tags:
        - sub account (request access)
      summary: Get a list of subaccounts
      responses:
        "200":
          description: A list of subaccounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  subaccounts:
                    type: array
                    items:
                      type: object
                      properties:
                        payment:
                          type: object
                          $ref: "#/components/schemas/SubAccount"
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
              example:
                subAccounts:
                  subaccount:
                    name: test-sub-account
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
                    balance: 100
                pageInfo:
                  skip: 0
                  limit: 10
                  totalCount: 20
                  hasPreviousPage: false
                  hasNextPage: true
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - sub account (request access)
      summary: Create a subaccount
      requestBody:
        description: Data to create a new subAccount or retrieve existing one
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/SubAccountPayload"
            examples:
              SubAccount:
                value:
                  pixKey: 9134e286-6f71-427a-bf00-241681624587
                  name: Test Account
      responses:
        "200":
          description: The Subccount created or retrieved if exists using the given pix key
          content:
            application/json:
              schema:
                type: object
                properties:
                  SubAccount:
                    type: object
                    $ref: "#/components/schemas/SubAccount"
                example:
                  SubAccount:
                    name: test-sub-account
                    pixKey: c4249323-b4ca-43f2-8139-8232aab09b93
        "400":
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    CompanyBankAccount:
      type: object
      properties:
        accountId:
          type: string
          description: ID of the Account
        isDefault:
          type: boolean
        balance:
          type: object
          properties:
            total:
              type: number
              description: Total amount in cents
            blocked:
              type: number
              description: Blocked amount in cents
            available:
              type: number
              description: Available amount in cents
    WithdrawTransaction:
      type: object
      properties:
        endToEndId:
          type: string
          description: ID of the Withdraw Transaction
        value:
          type: string
    Charge:
      type: object
      properties:
        value:
          type: number
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        type:
          type: string
          enum:
            - DYNAMIC
            - OVERDUE
          description: Charge type is used to determine whether a charge will have a
            deadline, fines and interests
        comment:
          type: string
        brCode:
          type: string
          description: EMV BRCode to be rendered as a QRCode
        status:
          type: string
          enum:
            - ACTIVE
            - COMPLETED
            - EXPIRED
        correlationID:
          type: string
          description: Your correlation ID to keep track of this charge
        paymentLinkID:
          type: string
          description: Payment Link ID, used on payment link and to retrieve qrcode image
        paymentLinkUrl:
          description: Payment Link URL to be shared with customers
        globalID:
          description: External ID of this charge
        transactionID:
          description: unique uuid used as the txid from Pix into the provider from your
            openpix account. This field link the charge with the transaction
            when paid.
        identifier:
          type: string
          description: Custom identifier for EMV
        qrCodeImage:
          description: QRCode image link URL
        additionalInfo:
          description: Additional info of the charge
          type: array
          items:
            type: object
            properties:
              key:
                description: key of object
                type: string
              value:
                description: value of object
                type: string
        pixKey:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        expiresIn:
          type: string
    ChargePayload:
      type: object
      properties:
        correlationID:
          type: string
          description: Your correlation ID to keep track of this charge
        value:
          type: number
          description: Value in cents of this charge
        type:
          type: string
          enum:
            - DYNAMIC
            - OVERDUE
          description: Charge type is used to determine whether a charge will have a
            deadline, fines and interests
        comment:
          type: string
          description: Comment to be added in infoPagador
        identifier:
          type: string
          description: Custom identifier for EMV
        expiresIn:
          type: number
          description: Expires the charge in seconds (minimum is 15 minutes)
        expiresDate:
          type: string
          description: Expiration date of the charge. Only in ISO 8601 format.
        customer:
          type: object
          $ref: "#/components/schemas/CustomerPayload"
        daysForDueDate:
          type: number
          description: Time in days until the charge hits the deadline so fines and
            interests start applying. This property is only considered for
            charges of type OVERDUE
        daysAfterDueDate:
          type: number
          description: Time in days that a charge is still payable after the deadline.
            This property is only considered for charges of type OVERDUE
        interests:
          description: Interests configuration. This property is only considered for
            charges of type OVERDUE
          type: object
          properties:
            value:
              type: number
              description: Value in basis points of interests to be applied daily after the
                charge hits the deadline
        fines:
          description: Fines configuration. This property is only considered for charges
            of type OVERDUE
          type: object
          properties:
            value:
              type: number
              description: Value in basis points of fines to be applied when the charge hits
                the deadline
        additionalInfo:
          type: array
          description: Additional info of the charge
          items:
            type: object
            properties:
              key:
                type: string
                description: key of object
              value:
                type: string
                description: value of object
        enableCashbackPercentage:
          type: boolean
          description: true to enable cashback and false to disable.
        enableCashbackExclusivePercentage:
          type: boolean
          description: true to enable fidelity cashback and false to disable.
      required:
        - correlationID
        - value
    ChargeRefund:
      type: object
      properties:
        value:
          type: number
          description: Value in cents of this refund
        status:
          type: string
          enum:
            - IN_PROCESSING
            - CONFIRMED
            - REJECTED
        correlationID:
          type: string
          description: Your correlation ID to keep track of this refund
        endToEndId:
          type: string
          description: The endToEndId of this refund
        time:
          type: string
          description: Time of this refund
        comment:
          type: string
          description: Comment of this refund
    ChargeRefundPayload:
      type: object
      properties:
        correlationID:
          type: string
          description: Your correlation ID to keep track for this refund
        value:
          type: number
          description: Value in cents for this refund
        comment:
          type: string
          description: Comment for this refund. Maximum length of 140 characters.
          maximum: 140
      required:
        - correlationID
    Customer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        taxID:
          type: object
          properties:
            taxID:
              type: string
            type:
              type: string
        correlationID:
          type: string
        address:
          type: object
          properties:
            zipcode:
              type: string
            street:
              type: string
            number:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            state:
              type: string
            complement:
              type: string
            country:
              type: string
    CustomerPayload:
      description: Customer field is not required. However, if you decide to send it,
        you must send at least one of the following combinations, name + taxID
        or name + email or name + phone.
      oneOf:
        - type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
            taxID:
              type: string
            correlationID:
              type: string
            address:
              type: object
              properties:
                zipcode:
                  type: string
                street:
                  type: string
                number:
                  type: string
                neighborhood:
                  type: string
                city:
                  type: string
                state:
                  type: string
                complement:
                  type: string
                country:
                  type: string
          required:
            - name
            - taxID
        - type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
            taxID:
              type: string
            correlationID:
              type: string
            address:
              type: object
              properties:
                zipcode:
                  type: string
                street:
                  type: string
                number:
                  type: string
                neighborhood:
                  type: string
                city:
                  type: string
                state:
                  type: string
                complement:
                  type: string
                country:
                  type: string
          required:
            - name
            - email
        - type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: string
            taxID:
              type: string
            correlationID:
              type: string
            address:
              type: object
              properties:
                zipcode:
                  type: string
                street:
                  type: string
                number:
                  type: string
                neighborhood:
                  type: string
                city:
                  type: string
                state:
                  type: string
                complement:
                  type: string
                country:
                  type: string
          required:
            - name
            - phone
    End:
      type: string
      format: date-time
      title: End Date
      description: End date used in the query. Complies with RFC 3339.
      example: 2020-12-01T17:00:00Z
    ApplicationEnumTypePayload:
      type: string
      description: Type of the application that you want to register. Each of this has
        some kind of permissions.
      enum:
        - API
        - PLUGIN
        - ORACLE
    TaxIDObjectPayload:
      type: object
      properties:
        taxID:
          type: string
          description: The tax identifier of your account holder. This should be a raw
            string with only digits.
        type:
          type: string
          enum:
            - BR:CNPJ
    PreRegistrationUserObject:
      type: object
      properties:
        firstName:
          type: string
          description: >
            The user's first name.

            If the pre registration has been approved, this will be turn the company's first user first name.
        lastName:
          type: string
          description: >
            The user's last name.

            If the pre registration has been approved, this will be turn the company's first user last name.
        email:
          type: string
          description: >
            The user's email.

            It'll be the email that will entered in contact to validate that it's a real person (it's a step to approve the preregistration).

            After approving the preregistration, it'll be the company's user email.
        phone:
          type: string
          description: >
            The user's phone number, need to be a validated phone number because
            it'll receive a SMS confirming that is a real person.

            We're accept only values that matches the E.164 standard, that follows this pattern: [+][country code][local phone number].
      required:
        - firstName
        - lastName
        - email
        - phone
    PreRegistrationObject:
      type: object
      properties:
        name:
          type: string
          description: The name of this preregistration. It'll be related as your company
            name too.
        website:
          type: string
          description: A website that is related to this preregistration.
        taxID:
          $ref: "#/components/schemas/TaxIDObjectPayload"
      required:
        - name
        - taxID
    PreRegistrationPayloadObject:
      type: object
      properties:
        preRegistration:
          $ref: "#/components/schemas/PreRegistrationObject"
        user:
          $ref: "#/components/schemas/PreRegistrationUserObject"
    AccountObjectPayload:
      type: object
      properties:
        clientId:
          type: string
          description: The client ID from the company bank account that is related to this
            preregistration/company.
    CompanyObjectPayload:
      type: object
      properties:
        id:
          type: string
          description: The ID of the company that is related to this preregistration.
        name:
          type: string
          description: The name of the company that is related to this preregistration.
        taxID:
          $ref: "#/components/schemas/TaxIDObjectPayload"
    PreRegistrationObjectPayload:
      type: object
      properties:
        name:
          type: string
          description: When the preregistration will turn a company, this will be the name
            of the company that this preregistration is related.
        taxID:
          $ref: "#/components/schemas/TaxIDObjectPayload"
    PartnerApplicationPayload:
      type: object
      properties:
        name:
          type: string
          description: The name that identifies your application.
        isActive:
          type: boolean
          description: Current status of your application.
        type:
          $ref: "#/components/schemas/ApplicationEnumTypePayload"
        clientId:
          type: string
          description: The ID of this client application.
        clientSecret:
          type: string
          description: The secret of this client application.
    PaymentApprovePayload:
      type: object
      properties:
        correlationID:
          type: string
          description: the correlation ID of the payment to be approved
    PaymentCreatePayload:
      oneOf:
        - title: Pix key
          type: object
          required:
            - value
            - destinationAlias
            - destinationAliasType
            - correlationID
          properties:
            value:
              type: number
              description: value of the requested payment in cents
            destinationAlias:
              type: string
              description: the pix key the payment should be sent to
            destinationAliasType:
              type: string
              enum:
                - CPF
                - CNPJ
                - EMAIL
                - PHONE
                - RANDOM
              description: the type of the pix key the payment should be sent to
            correlationID:
              type: string
              description: an unique identifier for your payment
            comment:
              type: string
              description: the comment that will be send alongisde your payment
            sourceAccountId:
              type: string
              description: an optional id for the source account of the payment, if not
                informed will assume the default account
        - title: QR Code
          type: object
          required:
            - qrCode
            - correlationID
          properties:
            qrCode:
              type: string
              description: the QR Code to be paid
            correlationID:
              type: string
              description: an unique identifier for your payment
            comment:
              type: string
              description: the comment that will be send alongisde your payment
            sourceAccountId:
              type: string
              description: an optional id for the source account of the payment, if not
                informed will assume the default account
    Payment:
      type: object
      properties:
        value:
          type: number
          description: value of the requested payment in cents
        destinationAlias:
          type: string
          description: the pix key the payment should be sent to
        destinationAliasType:
          type: string
          enum:
            - CPF
            - CNPJ
            - EMAIL
            - PHONE
            - RANDOM
          description: the type of the pix key the payment should be sent to
        qrCode:
          type: string
          description: the QR Code to be paid
        correlationID:
          type: string
          description: Your correlation ID to keep track of this payment
        comment:
          type: string
          description: the comment that will be send alongisde your payment
        status:
          type: string
          description: payment status
          enum:
            - CREATED
            - FAILED
            - CONFIRMED
            - DENIED
        sourceAccountId:
          type: string
          description: the id of the payment source account
    PaymentTransaction:
      type: object
      properties:
        value:
          type: number
          description: value of the transaction generated by the payment in cents
        endToEndId:
          type: string
          description: endToEndId of the transaction generated by the payment
        time:
          type: string
          description: time the transaction generated by the payment happened
    PaymentDestination:
      type: object
      properties:
        name:
          type: string
          description: the name of the payment destination
        taxID:
          type: string
          description: the tax id of the payment destination
        pixKey:
          type: string
          description: the pix key of the payment destination
        bank:
          type: string
          description: the payment destination bank name
        branch:
          type: string
          description: the payment destination bank branch
        account:
          type: string
          description: the payment destination bank account
    PixQrCode:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        comment:
          type: string
        brCode:
          type: string
          description: EMV BRCode to be rendered as a Pix QRCode
        correlationID:
          type: string
          description: Your correlation ID to keep track of this pix qrcode
        paymentLinkID:
          type: string
          description: Payment Link ID, used on payment link and to retrieve qrcode image
        paymentLinkUrl:
          description: Payment Link URL to be shared with customers
        qrCodeImage:
          description: QRCode image link URL
        createdAt:
          type: string
        updatedAt:
          type: string
    PixQrCodePayload:
      type: object
      properties:
        name:
          type: string
          description: Name of this pix qrcode
        correlationID:
          type: string
          description: Your correlation ID to keep track of this qrcode
        value:
          type: number
          description: Value in cents of this qrcode
        comment:
          type: string
          description: Comment to be added in infoPagador
      required:
        - name
    Refund:
      type: object
      properties:
        value:
          type: number
        status:
          type: string
          enum:
            - IN_PROCESSING
            - REFUNDED
            - NOT_ACCOMPLISHED
        correlationID:
          type: string
          description: Your correlation ID to keep track of this refund
        refundId:
          type: string
          description: Unique refund ID for this pix refund
        time:
          type: string
          description: Time of this refund
        comment:
          type: string
          description: Comment of this refund
    RefundPayload:
      type: object
      properties:
        value:
          type: number
        transactionEndToEndId:
          type: string
          description: Your transaction ID, or endToEnd ID, to keep track of this refund
        correlationID:
          type: string
          description: Your correlation ID, unique identifier refund
        comment:
          type: string
          description: Comment of this refund. Maximum length of 140 characters.
          maximum: 140
    Start:
      type: string
      format: date-time
      title: Start Date
      description: Start date used in the query. Complies with RFC 3339.
      example: 2020-01-01T00:00:00Z
    Subscription:
      type: object
      properties:
        globalID:
          type: string
          description: The globalID of the subscription.
        value:
          type: number
          description: Value in cents of the subscription
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        dayGenerateCharge:
          type: number
          description: Day of the month that the charges will be generated
    SubscriptionPayload:
      type: object
      properties:
        customer:
          type: object
          description: Customer of this subscription
          properties:
            name:
              type: string
              description: Customer name
            email:
              type: string
              description: Customer email
            phone:
              type: string
              description: Customer phone
            taxID:
              type: string
              description: Customer taxID (CPF or CNPJ)
            address:
              type: object
              properties:
                zipcode:
                  type: string
                street:
                  type: string
                number:
                  type: string
                neighborhood:
                  type: string
                city:
                  type: string
                state:
                  type: string
                complement:
                  type: string
                country:
                  type: string
        value:
          type: number
          description: Value in cents of this subscription
        comment:
          type: string
          description: Comment to be added in infoPagador
        additionalInfo:
          description: Additional info of the charge
          type: array
          items:
            type: object
            properties:
              key:
                description: key of object
                type: string
              value:
                description: value of object
                type: string
        dayGenerateCharge:
          type: number
          description: Day of the month that the charges will be generated. Maximum of 31.
          minimum: 1
          maximum: 31
          default: 5
        chargeType:
          type: string
          enum:
            - DYNAMIC
            - OVERDUE
          description: The charge type is used to determine whether charges generated by
            the subscription will have fines and interests
          default: DYNAMIC
        dayDue:
          type: number
          minimum: 3
          default: 7
          description: Days that the charge will take to expire from the generation day.
      required:
        - customer
        - value
    Transaction:
      type: object
      properties:
        charge:
          type: object
          $ref: "#/components/schemas/Charge"
        value:
          type: number
        time:
          type: string
        endToEndID:
          type: string
        transactionID:
          type: string
        infoPagador:
          type: string
        endToEndId:
          type: string
        customer:
          type: object
          $ref: "#/components/schemas/Customer"
        withdraw:
          type: object
          $ref: "#/components/schemas/PixWithdrawTransaction"
        payer:
          type: object
          $ref: "#/components/schemas/Customer"
        type:
          type: string
          description: Pix Transaction type
          enum:
            - PAYMENT
            - WITHDRAW
            - REFUND
            - FEE
        globalID:
          description: External ID of this transaction
        pixQrCode:
          type: object
          $ref: "#/components/schemas/PixQrCode"
    PixWithdrawTransaction:
      type: object
      properties:
        value:
          type: number
        time:
          type: string
        endToEndID:
          type: string
        transactionID:
          type: string
        infoPagador:
          type: string
        endToEndId:
          type: string
        payer:
          type: object
          $ref: "#/components/schemas/Customer"
        type:
          type: string
    TransferCreatePayload:
      type: object
      properties:
        value:
          type: number
          description: value of the transfer in cents
        fromPixKey:
          type: string
          description: the pix key of the account the value of the transfer will come out
            from
        toPixKey:
          type: string
          description: the pix key of the account the value of the transfer will go to
    TransferTransaction:
      type: object
      properties:
        value:
          type: number
          description: value of the transaction generated by the transfer
        time:
          type: string
          description: the time the transfer happened
        correlationID:
          type: string
          description: your correlation ID to keep track of this transfer
    WebhookPayload:
      type: object
      properties:
        name:
          type: string
        event:
          type: string
          description: The event to listen to. If omitted, the webhook will be registered
            to listen the OPENPIX:TRANSACTION_RECEIVED. Event called when a new
            pix transactions is received
          $ref: "#/components/schemas/WebhookEventEnum"
        url:
          type: string
        authorization:
          type: string
        isActive:
          type: boolean
    Webhook:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        event:
          type: string
          $ref: "#/components/schemas/WebhookEventEnum"
        url:
          type: string
        authorization:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
    WebhookEventEnum:
      type: string
      description: >
        Available events to register a webhook to listen to. If no one selected
        anyone the default event will be OPENPIX:TRANSACTION_RECEIVED.


        * **OPENPIX:CHARGE_CREATED** - New charge created

        * **OPENPIX:CHARGE_COMPLETED** - Charge completed is when a charge is fully paid

        * **OPENPIX:CHARGE_EXPIRED** - Charge expired is when a charge is not fully paid and expired

        * **OPENPIX:TRANSACTION_RECEIVED** - New PIX transaction received

        * **OPENPIX:TRANSACTION_REFUND_RECEIVED** - New PIX transaction refund received or refunded

        * **OPENPIX:MOVEMENT_CONFIRMED** - Payment confirmed is when the pix transaction related to the payment gets confirmed

        * **OPENPIX:MOVEMENT_FAILED** - Payment failed is when the payment gets approved and a error occurs

        * **OPENPIX:MOVEMENT_REMOVED** - Payment was removed by a user
      enum:
        - OPENPIX:CHARGE_CREATED
        - OPENPIX:CHARGE_COMPLETED
        - OPENPIX:CHARGE_EXPIRED
        - OPENPIX:TRANSACTION_RECEIVED
        - OPENPIX:TRANSACTION_REFUND_RECEIVED
        - OPENPIX:MOVEMENT_CONFIRMED
        - OPENPIX:MOVEMENT_FAILED
        - OPENPIX:MOVEMENT_REMOVED
    SubAccount:
      type: object
      properties:
        name:
          type: string
          description: Name of the sub account
        pixKey:
          type: string
          description: The pix key for the sub account
        balance:
          type: number
          description: Number in cents that represent the balance of the sub account
    transaction:
      type: object
      properties:
        status:
          type: string
          description: The status of the transaction
        value:
          type: number
          description: The value of the transaction in cents
        correlationID:
          type: string
          description: The correlation ID of the transaction
        destinationAlias:
          type: string
          description: The pix key of the transaction
        comment:
          type: string
          description: The comment of the transaction
    SubAccountPayload:
      type: object
      properties:
        pixKey:
          type: string
          description: The pix key for the sub account
        name:
          type: string
          description: Name of the sub account
  securitySchemes:
    AppID:
      type: apiKey
      in: header
      name: Authorization
tags:
  - name: account
    description: |
      Endpoint to manage Accounts
  - name: cashback-fidelity
    description: |
      Endpoint to manage exclusive cashbacks
  - name: charge
    description: |
      Endpoint to manage Charges
  - name: charge refund
    description: |
      Endpoint to manage charge refunds
  - name: customer
    description: |
      Endpoint to manage Customer
  - name: partner (request access)
    description: |
      Partners integrate affiliated companies.<br/>
      They can register new companies, manage them, and earn money from them.
  - name: payment (request access)
    description: |
      Endpoint to init a payment using a Pix Key.
  - name: pixQrCode
    description: |
      Endpoint to manage static QRCodes
  - name: refund
    description: |
      Endpoint to manage Refunds
  - name: subscription
    description: |
      Endpoint to manage Subscriptions
  - name: transactions
    description: |
      Endpoint to manage Transactions
  - name: transfer (request access)
    description: |
      Endpoint to transfer values between accounts.
  - name: webhook
    description: |
      Endpoint to manage Webhooks
  - name: sub account (request access)
    description: |
      Endpoint to manage sub accounts.
