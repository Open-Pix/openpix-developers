openapi: 3.0.3
info:
  title: OpenPix
  description: >-
    A OpenPix é uma Plataforma de Gestão de Pagamentos. Para utilizar nossa API
    você deve
    acessar  __[https://api.openpix.com.br/](https://api.openpix.com.br/)__ e
    somente o mesmo. A OpenPix não aceita subdominios para a API.


    Veja como configurar seu acesso a nossa API [aqui](https://developers.openpix.com.br/docs/apis/api-getting-started).
  version: 1.0.0
servers:
  - url: https://api.openpix.com.br
    description: Production server
security:
  - AppID: []
paths:
  '/api/planning/area/v1/query/{id}':
    delete:
      tags:
        - areas
      summary: Delete one area
      parameters:
        - name: id
          in: path
          description: platform ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The area was deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  area:
                    type: string
                    description: area ID that was deleted
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
    get:
      tags:
        - areas
      summary: Get one area
      parameters:
        - name: id
          in: path
          description: platform ID or correlation ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The business division retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  area:
                    type: object
                    $ref: '#/components/schemas/Area'
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  area:
                    type: object
                    $ref: '#/components/schemas/Area'
  /api/planning/area/v1/query:
    get:
      tags:
        - areas
      summary: Get a list of areas
      responses:
        '200':
          description: A list of areas
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  areas:
                    type: array
                    items:
                      $ref: '#/components/schemas/Area'
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /api/planning/area/v1/update-or-create:
    post:
      tags:
        - areas
      summary: Create or Update multiple areas
      description: Endpoint to create or update multiple areas
      requestBody:
        description: Data to create create or update areas
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/AreaPayload'
      responses:
        '200':
          description: A list of all areas created/updated and possible errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/AreaPayload'
                        message:
                          type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Area'
        '400':
          description: An error message of missing area
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /api/planning/area/v1/user-add:
    post:
      tags:
        - areas
      summary: Add users to areas
      description: Endpoint to add users to areas
      requestBody:
        description: Data to add users to areas
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                areaUsersAdd:
                  type: array
                  items:
                    $ref: '#/components/schemas/AreaUser'
      responses:
        '200':
          description: A list of all adding operations that was succeeded or errored
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/AreaUser'
                        message:
                          type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        areaId:
                          type: string
                        users:
                          type: array
                          items:
                            type: string
                        usersNotUpdated:
                          type: array
                          items:
                            type: string
        '400':
          description: An error message of wrong payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /api/planning/area/v1/user-remove:
    post:
      tags:
        - areas
      summary: Remove users from areas
      description: Endpoint to remove users from areas
      requestBody:
        description: Data to remove uses from areas
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                areaUsersRemove:
                  type: array
                  items:
                    $ref: '#/components/schemas/AreaUser'
      responses:
        '200':
          description: A list of all removal operations that was succeeded or errored
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/AreaUser'
                        message:
                          type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        areaId:
                          type: string
                        users:
                          type: array
                          items:
                            type: string
                        usersNotUpdated:
                          type: array
                          items:
                            type: string
        '400':
          description: An error message of wrong payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  '/api/common/user/v1/users/{id}':
    delete:
      tags:
        - users
      summary: Delete one user
      parameters:
        - name: id
          in: path
          description: platform ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The user was deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    type: string
                    description: user ID that was deleted
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
    get:
      tags:
        - users
      summary: Get one user
      parameters:
        - name: id
          in: path
          description: platform ID or email or correlation ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The user retrieve using the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
  /api/common/user/v1/users:
    get:
      tags:
        - users
      summary: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pageInfo:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                            data:
                              type: object
                              properties:
                                skip:
                                  type: number
                                limit:
                                  type: number
                      skip:
                        type: number
                      limit:
                        type: number
                      totalCount:
                        type: number
                      hasPreviousPage:
                        type: boolean
                      hasNextPage:
                        type: boolean
        '400':
          description: An error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /api/common/user/v1/update-or-create:
    post:
      tags:
        - users
      summary: Create or Update multiple users
      description: Endpoint to create or update multiple users
      requestBody:
        description: Data to create or update users
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserPayload'
      responses:
        '200':
          description: A list of all users created/updated and possible errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/UserPayload'
                        message:
                          type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: An error message of missing users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
components:
  securitySchemes:
    AppID:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Area:
      type: object
      properties:
        _id:
          type: string
        updatedAt:
          type: string
          format: date
        createdAt:
          type: string
          format: date
        name:
          type: string
        active:
          type: boolean
        address:
          type: string
        parent:
          type: string
        managers:
          type: array
          items:
            type: string
        company:
          type: string
        createdBy:
          type: string
        approvedBy:
          type: string
        tags:
          type: array
          items:
            type: string
        image:
          type: string
        correlationID:
          type: string
        allowCandidatesApply:
          type: boolean
    AreaPayload:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        correlationID:
          type: string
        active:
          type: boolean
        parent:
          type: string
        managers:
          type: array
          items:
            type: string
        allowCandidatesApply:
          type: boolean
        tags:
          type: array
          items:
            type: string
    AreaUser:
      type: object
      properties:
        areaId:
          type: string
          description: area ID to add/remove user
        users:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        _id:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
        nick:
          type: string
        taxID:
          type: string
        company:
          type: string
        phoneNumbers:
          type: string
        active:
          type: string
        isBlocked:
          type: string
        name:
          type: string
        manager:
          type: string
        roles:
          type: string
        roleGroups:
          type: string
        emails:
          type: string
        lang:
          type: string
        journeySchedule:
          type: string
        tags:
          type: string
        costRevenueCenter:
          type: string
        correlationID:
          type: string
        gender:
          type: string
        birthDate:
          type: string
        admissionDate:
          type: string
        demissionDate:
          type: string
        jobTitle:
          type: string
    UserPayload:
      type: object
      properties:
        id:
          type: string
        emails:
          type: array
          items:
            type: string
        taxID:
          type: string
        name:
          type: string
        nick:
          type: string
        gender:
          type: string
        tags:
          type: string
        correlationID:
          type: string
        manager:
          type: string
        area:
          type: string
        phoneNumbers:
          type: array
          items:
            type: string
        birthDate:
          type: string
          format: date
        admissionDate:
          type: string
          format: date
        demissionDate:
          type: string
          format: date
        password:
          type: string
tags:
  - name: users
    description: |
      Endpoint to manage Users
